{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstantWorldTracker = void 0;\n\nconst zappar_cv_1 = require(\"@zappar/zappar-cv\");\n\nconst zappar_1 = require(\"./zappar\");\n/**\n * Attaches content to a point on a surface in front of the user as it moves around in the camera view.\n * @see https://docs.zap.works/universal-ar/javascript/instant-world-tracking/\n */\n\n\nclass InstantWorldTracker {\n  /**\n   * Constructs a new InstantWorldTracker.\n   * @param _pipeline - The pipeline that this tracker will operate within.\n  */\n  constructor(_pipeline) {\n    this._pipeline = _pipeline;\n    /**\n    * The instant world tracking anchor.\n    */\n\n    this.anchor = {\n      poseCameraRelative: mirror => this._anchorPoseCameraRelative(mirror),\n      pose: (cameraPose, mirror) => this._anchorPose(cameraPose, mirror)\n    };\n    this._z = zappar_1.z();\n    this._impl = this._z.instant_world_tracker_create(this._pipeline._getImpl());\n  }\n  /**\n   * Destroys the instant tracker.\n   */\n\n\n  destroy() {\n    this._z.instant_world_tracker_destroy(this._impl);\n  }\n\n  _anchorPoseCameraRelative(mirror) {\n    return this._z.instant_world_tracker_anchor_pose_camera_relative(this._impl, mirror === true);\n  }\n\n  _anchorPose(cameraPose, mirror) {\n    return this._z.instant_world_tracker_anchor_pose(this._impl, cameraPose, mirror === true);\n  }\n  /**\n   * Gets/sets the enabled state of the instant world tracker.\n   * Disable when not in use to save computational resources during frame processing.\n   */\n\n\n  get enabled() {\n    return this._z.instant_world_tracker_enabled(this._impl);\n  }\n\n  set enabled(e) {\n    this._z.instant_world_tracker_enabled_set(this._impl, e);\n  }\n  /**\n   * Sets the point in the user's environment that the anchor tracks from.\n   *\n   * The parameters passed in to this function correspond to the X, Y and Z coordinates (in camera space) of the point to track. Choosing a position with X and Y coordinates of zero, and a negative Z coordinate, will select a point on a surface directly in front of the center of the screen.\n   *\n   * @param orientation -  The orientation of the point in space.\n   */\n\n\n  setAnchorPoseFromCameraOffset(x, y, z, orientation) {\n    this._z.instant_world_tracker_anchor_pose_set_from_camera_offset(this._impl, x, y, z, orientation || zappar_cv_1.instant_world_tracker_transform_orientation_t.MINUS_Z_AWAY_FROM_USER);\n  }\n\n}\n\nexports.InstantWorldTracker = InstantWorldTracker;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/face-mask-demo/AR-Face-Mask/node_modules/@zappar/zappar/lib/instantworldtracker.js"],"names":["Object","defineProperty","exports","value","InstantWorldTracker","zappar_cv_1","require","zappar_1","constructor","_pipeline","anchor","poseCameraRelative","mirror","_anchorPoseCameraRelative","pose","cameraPose","_anchorPose","_z","z","_impl","instant_world_tracker_create","_getImpl","destroy","instant_world_tracker_destroy","instant_world_tracker_anchor_pose_camera_relative","instant_world_tracker_anchor_pose","enabled","instant_world_tracker_enabled","e","instant_world_tracker_enabled_set","setAnchorPoseFromCameraOffset","x","y","orientation","instant_world_tracker_anchor_pose_set_from_camera_offset","instant_world_tracker_transform_orientation_t","MINUS_Z_AWAY_FROM_USER"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;AACA;AACA;AACA;AACA;;;AACA,MAAMF,mBAAN,CAA0B;AACtB;AACJ;AACA;AACA;AACII,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA;AACR;AACA;;AACQ,SAAKC,MAAL,GAAc;AACVC,MAAAA,kBAAkB,EAAEC,MAAM,IAAI,KAAKC,yBAAL,CAA+BD,MAA/B,CADpB;AAEVE,MAAAA,IAAI,EAAE,CAACC,UAAD,EAAaH,MAAb,KAAwB,KAAKI,WAAL,CAAiBD,UAAjB,EAA6BH,MAA7B;AAFpB,KAAd;AAIA,SAAKK,EAAL,GAAUV,QAAQ,CAACW,CAAT,EAAV;AACA,SAAKC,KAAL,GAAa,KAAKF,EAAL,CAAQG,4BAAR,CAAqC,KAAKX,SAAL,CAAeY,QAAf,EAArC,CAAb;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,OAAO,GAAG;AACN,SAAKL,EAAL,CAAQM,6BAAR,CAAsC,KAAKJ,KAA3C;AACH;;AACDN,EAAAA,yBAAyB,CAACD,MAAD,EAAS;AAC9B,WAAO,KAAKK,EAAL,CAAQO,iDAAR,CAA0D,KAAKL,KAA/D,EAAsEP,MAAM,KAAK,IAAjF,CAAP;AACH;;AACDI,EAAAA,WAAW,CAACD,UAAD,EAAaH,MAAb,EAAqB;AAC5B,WAAO,KAAKK,EAAL,CAAQQ,iCAAR,CAA0C,KAAKN,KAA/C,EAAsDJ,UAAtD,EAAkEH,MAAM,KAAK,IAA7E,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACe,MAAPc,OAAO,GAAG;AACV,WAAO,KAAKT,EAAL,CAAQU,6BAAR,CAAsC,KAAKR,KAA3C,CAAP;AACH;;AACU,MAAPO,OAAO,CAACE,CAAD,EAAI;AACX,SAAKX,EAAL,CAAQY,iCAAR,CAA0C,KAAKV,KAA/C,EAAsDS,CAAtD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,6BAA6B,CAACC,CAAD,EAAIC,CAAJ,EAAOd,CAAP,EAAUe,WAAV,EAAuB;AAChD,SAAKhB,EAAL,CAAQiB,wDAAR,CAAiE,KAAKf,KAAtE,EAA6EY,CAA7E,EAAgFC,CAAhF,EAAmFd,CAAnF,EAAsFe,WAAW,IAAI5B,WAAW,CAAC8B,6CAAZ,CAA0DC,sBAA/J;AACH;;AAhDqB;;AAkD1BlC,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstantWorldTracker = void 0;\nconst zappar_cv_1 = require(\"@zappar/zappar-cv\");\nconst zappar_1 = require(\"./zappar\");\n/**\n * Attaches content to a point on a surface in front of the user as it moves around in the camera view.\n * @see https://docs.zap.works/universal-ar/javascript/instant-world-tracking/\n */\nclass InstantWorldTracker {\n    /**\n     * Constructs a new InstantWorldTracker.\n     * @param _pipeline - The pipeline that this tracker will operate within.\n    */\n    constructor(_pipeline) {\n        this._pipeline = _pipeline;\n        /**\n        * The instant world tracking anchor.\n        */\n        this.anchor = {\n            poseCameraRelative: mirror => this._anchorPoseCameraRelative(mirror),\n            pose: (cameraPose, mirror) => this._anchorPose(cameraPose, mirror)\n        };\n        this._z = zappar_1.z();\n        this._impl = this._z.instant_world_tracker_create(this._pipeline._getImpl());\n    }\n    /**\n     * Destroys the instant tracker.\n     */\n    destroy() {\n        this._z.instant_world_tracker_destroy(this._impl);\n    }\n    _anchorPoseCameraRelative(mirror) {\n        return this._z.instant_world_tracker_anchor_pose_camera_relative(this._impl, mirror === true);\n    }\n    _anchorPose(cameraPose, mirror) {\n        return this._z.instant_world_tracker_anchor_pose(this._impl, cameraPose, mirror === true);\n    }\n    /**\n     * Gets/sets the enabled state of the instant world tracker.\n     * Disable when not in use to save computational resources during frame processing.\n     */\n    get enabled() {\n        return this._z.instant_world_tracker_enabled(this._impl);\n    }\n    set enabled(e) {\n        this._z.instant_world_tracker_enabled_set(this._impl, e);\n    }\n    /**\n     * Sets the point in the user's environment that the anchor tracks from.\n     *\n     * The parameters passed in to this function correspond to the X, Y and Z coordinates (in camera space) of the point to track. Choosing a position with X and Y coordinates of zero, and a negative Z coordinate, will select a point on a surface directly in front of the center of the screen.\n     *\n     * @param orientation -  The orientation of the point in space.\n     */\n    setAnchorPoseFromCameraOffset(x, y, z, orientation) {\n        this._z.instant_world_tracker_anchor_pose_set_from_camera_offset(this._impl, x, y, z, orientation || zappar_cv_1.instant_world_tracker_transform_orientation_t.MINUS_Z_AWAY_FROM_USER);\n    }\n}\nexports.InstantWorldTracker = InstantWorldTracker;\n"]},"metadata":{},"sourceType":"script"}