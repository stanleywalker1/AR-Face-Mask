{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FaceLandmark = exports.FaceLandmarkName = void 0;\n\nconst zappar_1 = require(\"./zappar\");\n\nconst gl_matrix_1 = require(\"gl-matrix\");\n\nvar zappar_cv_1 = require(\"@zappar/zappar-cv\");\n\nObject.defineProperty(exports, \"FaceLandmarkName\", {\n  enumerable: true,\n  get: function () {\n    return zappar_cv_1.face_landmark_name_t;\n  }\n});\n/**\n * Attaches content to a known point (landmark) on a face as it moves around in the camera view.\n * Landmarks will remain accurate, even as the user's expression changes.\n * @see https://docs.zap.works/universal-ar/javascript/face-tracking/\n */\n\nclass FaceLandmark {\n  /**\n   * Constructs a new FaceLanmdmark.\n   * @param _name - The name of the landmark to track.\n   * @see https://docs.zap.works/universal-ar/javascript/face-tracking/\n  */\n  constructor(_name) {\n    this._name = _name;\n    /**\n     * The most recent pose of this landmark, relative to the [[FaceAnchor]] used to update it.\n     * A 4x4 column-major transformation matrix.\n     */\n\n    this.pose = gl_matrix_1.mat4.create();\n    this._z = zappar_1.z();\n    this._impl = this._z.face_landmark_create(this._name);\n  }\n  /**\n   * Destroys the face landmark.\n   */\n\n\n  destroy() {\n    this._z.face_landmark_destroy(this._impl);\n  }\n  /**\n   * Updates pose directly from the expression and identity in a [[FaceAnchor]].\n   * @param f - The anchor to derive the expression and identity from.\n   * @param mirror - Pass `true` to mirror the location in the X-axis.\n  */\n\n\n  updateFromFaceAnchor(f, mirror) {\n    this._z.face_landmark_update(this._impl, f.identity, f.expression, mirror || false);\n\n    this.pose = this._z.face_landmark_anchor_pose(this._impl);\n  }\n  /**\n   * Updates pose directly from identity and expression coefficients.\n   * @param identity  - The identity coefficients.\n   * @param expression - The expression coefficients.\n   * @param mirror - Pass `true` to mirror the location in the X-axis.\n  */\n\n\n  updateFromIdentityExpression(identity, expression, mirror) {\n    this._z.face_landmark_update(this._impl, identity, expression, mirror || false);\n\n    this.pose = this._z.face_landmark_anchor_pose(this._impl);\n  }\n  /**\n   * @ignore\n  */\n\n\n  _getImpl() {\n    return this._impl;\n  }\n\n}\n\nexports.FaceLandmark = FaceLandmark;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar/lib/facelandmark.js"],"names":["Object","defineProperty","exports","value","FaceLandmark","FaceLandmarkName","zappar_1","require","gl_matrix_1","zappar_cv_1","enumerable","get","face_landmark_name_t","constructor","_name","pose","mat4","create","_z","z","_impl","face_landmark_create","destroy","face_landmark_destroy","updateFromFaceAnchor","f","mirror","face_landmark_update","identity","expression","face_landmark_anchor_pose","updateFromIdentityExpression","_getImpl"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,gBAAR,GAA2B,KAAK,CAAvD;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,WAAD,CAA3B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,mBAAD,CAAzB;;AACAP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,kBAA/B,EAAmD;AAAEQ,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,WAAW,CAACG,oBAAnB;AAA0C;AAAjF,CAAnD;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMR,YAAN,CAAmB;AACf;AACJ;AACA;AACA;AACA;AACIS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA;AACR;AACA;AACA;;AACQ,SAAKC,IAAL,GAAYP,WAAW,CAACQ,IAAZ,CAAiBC,MAAjB,EAAZ;AACA,SAAKC,EAAL,GAAUZ,QAAQ,CAACa,CAAT,EAAV;AACA,SAAKC,KAAL,GAAa,KAAKF,EAAL,CAAQG,oBAAR,CAA6B,KAAKP,KAAlC,CAAb;AACH;AACD;AACJ;AACA;;;AACIQ,EAAAA,OAAO,GAAG;AACN,SAAKJ,EAAL,CAAQK,qBAAR,CAA8B,KAAKH,KAAnC;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACII,EAAAA,oBAAoB,CAACC,CAAD,EAAIC,MAAJ,EAAY;AAC5B,SAAKR,EAAL,CAAQS,oBAAR,CAA6B,KAAKP,KAAlC,EAAyCK,CAAC,CAACG,QAA3C,EAAqDH,CAAC,CAACI,UAAvD,EAAmEH,MAAM,IAAI,KAA7E;;AACA,SAAKX,IAAL,GAAY,KAAKG,EAAL,CAAQY,yBAAR,CAAkC,KAAKV,KAAvC,CAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIW,EAAAA,4BAA4B,CAACH,QAAD,EAAWC,UAAX,EAAuBH,MAAvB,EAA+B;AACvD,SAAKR,EAAL,CAAQS,oBAAR,CAA6B,KAAKP,KAAlC,EAAyCQ,QAAzC,EAAmDC,UAAnD,EAA+DH,MAAM,IAAI,KAAzE;;AACA,SAAKX,IAAL,GAAY,KAAKG,EAAL,CAAQY,yBAAR,CAAkC,KAAKV,KAAvC,CAAZ;AACH;AACD;AACJ;AACA;;;AACIY,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKZ,KAAZ;AACH;;AA9Cc;;AAgDnBlB,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaceLandmark = exports.FaceLandmarkName = void 0;\nconst zappar_1 = require(\"./zappar\");\nconst gl_matrix_1 = require(\"gl-matrix\");\nvar zappar_cv_1 = require(\"@zappar/zappar-cv\");\nObject.defineProperty(exports, \"FaceLandmarkName\", { enumerable: true, get: function () { return zappar_cv_1.face_landmark_name_t; } });\n/**\n * Attaches content to a known point (landmark) on a face as it moves around in the camera view.\n * Landmarks will remain accurate, even as the user's expression changes.\n * @see https://docs.zap.works/universal-ar/javascript/face-tracking/\n */\nclass FaceLandmark {\n    /**\n     * Constructs a new FaceLanmdmark.\n     * @param _name - The name of the landmark to track.\n     * @see https://docs.zap.works/universal-ar/javascript/face-tracking/\n    */\n    constructor(_name) {\n        this._name = _name;\n        /**\n         * The most recent pose of this landmark, relative to the [[FaceAnchor]] used to update it.\n         * A 4x4 column-major transformation matrix.\n         */\n        this.pose = gl_matrix_1.mat4.create();\n        this._z = zappar_1.z();\n        this._impl = this._z.face_landmark_create(this._name);\n    }\n    /**\n     * Destroys the face landmark.\n     */\n    destroy() {\n        this._z.face_landmark_destroy(this._impl);\n    }\n    /**\n     * Updates pose directly from the expression and identity in a [[FaceAnchor]].\n     * @param f - The anchor to derive the expression and identity from.\n     * @param mirror - Pass `true` to mirror the location in the X-axis.\n    */\n    updateFromFaceAnchor(f, mirror) {\n        this._z.face_landmark_update(this._impl, f.identity, f.expression, mirror || false);\n        this.pose = this._z.face_landmark_anchor_pose(this._impl);\n    }\n    /**\n     * Updates pose directly from identity and expression coefficients.\n     * @param identity  - The identity coefficients.\n     * @param expression - The expression coefficients.\n     * @param mirror - Pass `true` to mirror the location in the X-axis.\n    */\n    updateFromIdentityExpression(identity, expression, mirror) {\n        this._z.face_landmark_update(this._impl, identity, expression, mirror || false);\n        this.pose = this._z.face_landmark_anchor_pose(this._impl);\n    }\n    /**\n     * @ignore\n    */\n    _getImpl() {\n        return this._impl;\n    }\n}\nexports.FaceLandmark = FaceLandmark;\n"]},"metadata":{},"sourceType":"script"}