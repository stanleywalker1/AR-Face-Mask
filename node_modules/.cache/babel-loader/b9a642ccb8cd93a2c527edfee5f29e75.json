{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function (token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\".concat(token.image, \"<- The Mode Stack is empty\");\n  },\n  buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\".concat(fullText.charAt(startOffset), \"<- at offset: \").concat(startOffset, \",\") + \" skipped \".concat(length, \" characters.\");\n  }\n};","map":{"version":3,"mappings":";;;;;;AAEaA,oCAAwD;AACnEC,kCAAgC,EAAhC,UAAiCC,KAAjC,EAA8C;AAC5C,WAAO,8DAAuDA,KAAK,CAACC,KAA7D,EAAkE,4BAAlE,CAAP;AACD,GAHkE;AAKnEC,kCAAgC,EAAhC,UACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAKiB;AAEf,WACE,kCAA2BJ,QAAQ,CAACK,MAAT,CACzBJ,WADyB,CAA3B,EAEC,gBAFD,EAECK,MAFD,CAEkBL,WAFlB,EAE6B,GAF7B,IAEmC,mBAAYC,MAAZ,EAAkB,cAAlB,CAHrC;AAKD;AAjBkE,CAAxD","names":["exports","buildUnableToPopLexerModeMessage","token","image","buildUnexpectedCharactersMessage","fullText","startOffset","length","line","column","charAt","concat"],"sourceRoot":"","sources":["../../../src/scan/lexer_errors_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}