{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\n\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar values_1 = __importDefault(require(\"lodash/values\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar follow_1 = require(\"../grammar/follow\");\n\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\n\nvar errors_public_1 = require(\"../errors_public\");\n\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\n\nvar recoverable_1 = require(\"./traits/recoverable\");\n\nvar looksahead_1 = require(\"./traits/looksahead\");\n\nvar tree_builder_1 = require(\"./traits/tree_builder\");\n\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\n\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\n\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\n\nvar error_handler_1 = require(\"./traits/error_handler\");\n\nvar context_assist_1 = require(\"./traits/context_assist\");\n\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\n\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\n\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\n\nexports.END_OF_FILE = (0, tokens_public_1.createTokenInstance)(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function () {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\n\nfunction EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n\n  return function () {\n    return value;\n  };\n}\n\nexports.EMPTY_ALT = EMPTY_ALT;\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(tokenVocabulary, config) {\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if ((0, has_1.default)(config, \"ignoredIssues\")) {\n      throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" + \"For further details.\");\n    }\n\n    this.skipValidations = (0, has_1.default)(config, \"skipValidations\") ? config.skipValidations // casting assumes the end user passing the correct type\n    : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n\n\n  Parser.performSelfAnalysis = function (parserInstance) {\n    throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" + \"\\t\\nUse the **instance** method with the same name instead.\");\n  };\n\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        (0, utils_1.toFastProperties)(_this);\n      });\n\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording(); // Building the GAST\n\n\n          (0, forEach_1.default)(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast;\n\n            _this.TRACE_INIT(\"\".concat(currRuleName, \" Rule\"), function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n\n      var resolverErrors = [];\n\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = (0, gast_resolver_public_1.resolveGrammar)({\n          rules: (0, values_1.default)(_this.gastProductionsCache)\n        });\n        _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if ((0, isEmpty_1.default)(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = (0, gast_resolver_public_1.validateGrammar)({\n            rules: (0, values_1.default)(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: (0, values_1.default)(_this.tokensMap),\n            errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n          _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n        }\n      }); // this analysis may fail if the grammar is not perfectly valid\n\n\n      if ((0, isEmpty_1.default)(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = (0, follow_1.computeAllProdsFollows)((0, values_1.default)(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions((0, values_1.default)(_this.gastProductionsCache));\n        });\n      }\n\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !(0, isEmpty_1.default)(_this.definitionErrors)) {\n        defErrorsMsgs = (0, map_1.default)(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \".concat(defErrorsMsgs.join(\"\\n-------------------------------\\n\")));\n      }\n    });\n  }; // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n\n\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\n\nexports.Parser = Parser;\n(0, apply_mixins_1.applyMixins)(Parser, [recoverable_1.Recoverable, looksahead_1.LooksAhead, tree_builder_1.TreeBuilder, lexer_adapter_1.LexerAdapter, recognizer_engine_1.RecognizerEngine, recognizer_api_1.RecognizerApi, error_handler_1.ErrorHandler, context_assist_1.ContentAssist, gast_recorder_1.GastRecorder, perf_tracer_1.PerformanceTracer]);\n\nvar CstParser =\n/** @class */\nfunction (_super) {\n  __extends(CstParser, _super);\n\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = true;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n\n  return CstParser;\n}(Parser);\n\nexports.CstParser = CstParser;\n\nvar EmbeddedActionsParser =\n/** @class */\nfunction (_super) {\n  __extends(EmbeddedActionsParser, _super);\n\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = false;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n\n  return EmbeddedActionsParser;\n}(Parser);\n\nexports.EmbeddedActionsParser = EmbeddedActionsParser;","map":{"version":3,"mappings":"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","names":["exports","tokens_public_1","NaN","Object","freeze","recoveryEnabled","maxLookahead","dynamicTokensEnabled","outputCst","errorMessageProvider","errors_public_1","nodeLocationTracking","traceInitPerf","skipValidations","recoveryValueFunc","resyncEnabled","ParserDefinitionErrorType","EMPTY_ALT","value","tokenVocabulary","config","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","Error","Parser","parserInstance","TRACE_INIT","defErrorsMsgs","_this","selfAnalysisDone","className","enableRecording","definedRulesNames","currRuleName","wrappedRule","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","rules","definitionErrors","concat","validationErrors","tokenTypes","tokensMap","errMsgProvider","grammarName","allFollows","resyncFollows","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","defError","message","join","recoverable_1","looksahead_1","tree_builder_1","lexer_adapter_1","recognizer_engine_1","recognizer_api_1","error_handler_1","context_assist_1","gast_recorder_1","perf_tracer_1","__extends","configClone","_super"],"sourceRoot":"","sources":["../../../../src/parse/parser/parser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}