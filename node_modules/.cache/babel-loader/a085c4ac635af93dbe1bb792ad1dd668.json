{"ast":null,"code":"var _jsxFileName = \"/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Suspense, useMemo, useRef, useState } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { FaceTracker, HeadMaskMesh, ZapparCamera, ZapparCanvas, Loader, Pipeline } from '@zappar/zappar-react-three-fiber';\nimport helmetSrc from './assets/z_helmet.glb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Model() {\n  _s();\n\n  const [gltf, set] = useState();\n  useMemo(() => new GLTFLoader().load(helmetSrc, set), []);\n\n  if (gltf) {\n    const {\n      scene\n    } = gltf;\n    const Helmet = scene.getObjectByName('Helmet');\n    return /*#__PURE__*/_jsxDEV(\"primitive\", {\n      position: [0.25, -1.25, 0.1],\n      object: Helmet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n} // import { useLoader } from '@react-three/fiber'\n// import helmetSrc from './assets/maskLowPoly.glb'\n// function Model() {\n//   const gltf = useLoader(GLTFLoader, helmetSrc)\n//   return <primitive position={[0.25, -1.25, 0.1]} object={gltf.nodes['Helmet']} />\n// }\n\n\n_s(Model, \"yTXRByfg8aoZ9MFU3n1oQflTvwo=\");\n\n_c = Model;\n\nfunction App() {\n  _s2();\n\n  const faceTrackerGroup = useRef();\n  const pipeline = new Pipeline();\n  return /*#__PURE__*/_jsxDEV(ZapparCanvas, {\n    children: [/*#__PURE__*/_jsxDEV(ZapparCamera, {\n      pipeline: pipeline,\n      userFacing: true,\n      rearCameraMirrorMode: \"css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceTracker, {\n      ref: faceTrackerGroup,\n      pipeline: pipeline,\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(HeadMaskMesh, {\n          trackerGroup: faceTrackerGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [2.5, 8, 5],\n      intensity: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"rdXp/YHVGUX9h+p0TK+6TJQU19c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/src/App.tsx"],"names":["React","Suspense","useMemo","useRef","useState","GLTFLoader","FaceTracker","HeadMaskMesh","ZapparCamera","ZapparCanvas","Loader","Pipeline","helmetSrc","Model","gltf","set","load","scene","Helmet","getObjectByName","App","faceTrackerGroup","pipeline"],"mappings":";;;;AAAA,OAAOA,KAAP,IACCC,QADD,EACWC,OADX,EACoBC,MADpB,EAC4BC,QAD5B,QAEO,OAFP;AAGA,SAAeC,UAAf,QAAiC,uCAAjC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAQO,kCARP;AASA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,GAAP,IAAcX,QAAQ,EAA5B;AACAF,EAAAA,OAAO,CAAC,MAAM,IAAIG,UAAJ,GAAiBW,IAAjB,CAAsBJ,SAAtB,EAAiCG,GAAjC,CAAP,EAA8C,EAA9C,CAAP;;AAEA,MAAID,IAAJ,EAAU;AACR,UAAM;AAAEG,MAAAA;AAAF,QAAYH,IAAlB;AACA,UAAMI,MAAM,GAAGD,KAAK,CAACE,eAAN,CAAsB,QAAtB,CAAf;AACA,wBAAO;AAAW,MAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,EAAc,GAAd,CAArB;AAAyC,MAAA,MAAM,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAO,IAAP;AACD,C,CAED;AACA;AAEA;AACA;AACA;AACA;;;GAlBSL,K;;KAAAA,K;;AAoBT,SAASO,GAAT,GAAe;AAAA;;AACb,QAAMC,gBAAgB,GAAGlB,MAAM,EAA/B;AACA,QAAMmB,QAAQ,GAAG,IAAIX,QAAJ,EAAjB;AACA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEW,QAAxB;AAAkC,MAAA,UAAU,MAA5C;AAA6C,MAAA,oBAAoB,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,GAAG,EAAED,gBAAlB;AAAoC,MAAA,QAAQ,EAAEC,QAA9C;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAc,MAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAkB,MAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAA5B;AAAyC,MAAA,SAAS,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;IAjBQD,G;;MAAAA,G;AAmBT,eAAeA,GAAf","sourcesContent":["import React, {\n Suspense, useMemo, useRef, useState,\n} from 'react';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport {\n  FaceTracker,\n  HeadMaskMesh,\n  ZapparCamera,\n  ZapparCanvas,\n  Loader,\n  Pipeline,\n  Types\n} from '@zappar/zappar-react-three-fiber';\nimport helmetSrc from './assets/z_helmet.glb';\n\nfunction Model() {\n  const [gltf, set] = useState<GLTF>();\n  useMemo(() => new GLTFLoader().load(helmetSrc, set), []);\n\n  if (gltf) {\n    const { scene } = gltf;\n    const Helmet = scene.getObjectByName('Helmet');\n    return <primitive position={[0.25, -1.25, 0.1]} object={Helmet} />;\n  }\n  return null;\n}\n\n// import { useLoader } from '@react-three/fiber'\n// import helmetSrc from './assets/maskLowPoly.glb'\n\n// function Model() {\n//   const gltf = useLoader(GLTFLoader, helmetSrc)\n//   return <primitive position={[0.25, -1.25, 0.1]} object={gltf.nodes['Helmet']} />\n// }\n\nfunction App() {\n  const faceTrackerGroup = useRef<Types.FaceAnchorGroup>();\n  const pipeline = new Pipeline();\n  return (\n    <ZapparCanvas>\n      <ZapparCamera pipeline={pipeline} userFacing rearCameraMirrorMode=\"css\" />\n      <FaceTracker ref={faceTrackerGroup} pipeline={pipeline}>\n        <Suspense fallback={null}>\n          <HeadMaskMesh trackerGroup={faceTrackerGroup} />\n          <Model />\n        </Suspense>\n      </FaceTracker>\n      <ambientLight intensity={0.6} />\n      <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n      <Loader />\n    </ZapparCanvas>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}