{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FaceDrawProject = void 0;\n\nconst shader_1 = require(\"./shader\");\n\nclass FaceDrawProject {\n  constructor(_gl) {\n    this._gl = _gl;\n  }\n\n  dispose() {\n    if (this._vbo) this._gl.deleteBuffer(this._vbo);\n    if (this._uvbo) this._gl.deleteBuffer(this._uvbo);\n    if (this._ibo) this._gl.deleteBuffer(this._ibo);\n    if (this._shader) this._gl.deleteProgram(this._shader.prog);\n    this._vbo = undefined;\n    this._uvbo = undefined;\n    this._ibo = undefined;\n    this._shader = undefined;\n  }\n\n  _generateIBO(indices, gl) {\n    if (this._ibo && this._lastIndices === indices) return this._ibo;\n    this._lastIndices = indices;\n    if (!this._ibo) this._ibo = gl.createBuffer();\n    if (!this._ibo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._ibo);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return this._ibo;\n  }\n\n  _generateVBO(face, gl) {\n    if (!this._vbo) this._vbo = gl.createBuffer();\n    if (!this._vbo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return this._vbo;\n  }\n\n  _generateUVBO(face, gl) {\n    if (!this._uvbo) this._uvbo = gl.createBuffer();\n    if (!this._uvbo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvbo);\n    gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return this._uvbo;\n  }\n\n  drawFace(matrix, vertices, uvMatrix, uvs, indices, texture) {\n    let gl = this._gl;\n\n    let shader = this._getShader(gl);\n\n    let v = this._generateVBO(vertices, gl);\n\n    let u = this._generateUVBO(uvs, gl);\n\n    let i = this._generateIBO(indices, gl);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE); // gl.enable(gl.BLEND);\n    // gl.blendFunc(gl.ONE, gl.ONE);\n    // gl.blendEquation(gl.FUNC_SUBTRACT);\n\n    gl.useProgram(shader.prog);\n    gl.uniformMatrix4fv(shader.unif_matrix, false, matrix);\n    gl.uniformMatrix4fv(shader.unif_uvmatrix, false, uvMatrix);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(shader.unif_sampler, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, v);\n    gl.vertexAttribPointer(shader.attr_position, 3, gl.FLOAT, false, 3 * 4, 0);\n    gl.enableVertexAttribArray(shader.attr_position);\n    gl.bindBuffer(gl.ARRAY_BUFFER, u);\n    gl.vertexAttribPointer(shader.attr_uv, 3, gl.FLOAT, false, 3 * 4, 0);\n    gl.enableVertexAttribArray(shader.attr_uv);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, i);\n    gl.drawElements(gl.TRIANGLES, 2304 * 3, gl.UNSIGNED_SHORT, 0);\n    gl.disableVertexAttribArray(shader.attr_position);\n    gl.disableVertexAttribArray(shader.attr_uv);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  _getShader(gl) {\n    if (this._shader) return this._shader;\n    let prog = gl.createProgram();\n    if (!prog) throw new Error(\"Unable to create program\");\n    let vertexShader = shader_1.compileShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n    let fragmentShader = shader_1.compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSrc);\n    gl.attachShader(prog, vertexShader);\n    gl.attachShader(prog, fragmentShader);\n    shader_1.linkProgram(gl, prog);\n    let unif_matrix = gl.getUniformLocation(prog, \"matrix\");\n    if (!unif_matrix) throw new Error(\"Unable to get uniform location matrix\");\n    let unif_uvmatrix = gl.getUniformLocation(prog, \"uvmatrix\");\n    if (!unif_uvmatrix) throw new Error(\"Unable to get uniform location matrix\");\n    let unif_sampler = gl.getUniformLocation(prog, \"uSampler\");\n    if (!unif_sampler) throw new Error(\"Unable to get uniform location sampler\");\n    this._shader = {\n      prog,\n      unif_matrix,\n      unif_sampler,\n      unif_uvmatrix,\n      attr_position: gl.getAttribLocation(prog, \"position\"),\n      attr_uv: gl.getAttribLocation(prog, \"uv\"),\n      attr_texturecoord: gl.getAttribLocation(prog, \"aTextureCoord\")\n    };\n    return this._shader;\n  }\n\n}\n\nexports.FaceDrawProject = FaceDrawProject;\nlet vertexShaderSrc = `\n#ifndef GL_ES\n#define highp\n#define mediump\n#define lowp\n#endif\n\nuniform mat4 matrix;\nuniform mat4 uvmatrix;\nattribute vec4 position;\nattribute vec3 normal;\nattribute vec3 uv;\n\n// varying highp vec3 vnormal;\n\nvarying highp vec2 vTextureCoord;\nvarying highp float vAlpha;\n\nvoid main()\n{\n    gl_Position = matrix * position;\n    vec4 ret = uvmatrix * vec4(uv.x, uv.y, uv.z, 1.0);\n    ret.x /= ret.w * 2.0;\n    ret.y /= ret.w * 2.0;\n    ret.x += 0.5;\n    ret.y += 0.0;\n    vAlpha = 1.0;\n    vTextureCoord = ret.xy;\n}`;\nlet fragmentShaderSrc = `\n#define highp mediump\n#ifdef GL_ES\n    // define default precision for float, vec, mat.\n    precision highp float;\n#else\n#define highp\n#define mediump\n#define lowp\n#endif\n\nvarying highp vec2 vTextureCoord;\nvarying highp vec3 vnormal;\nvarying highp float vAlpha;\nuniform lowp sampler2D uSampler;\n\nvoid main()\n{\n    // vec3 normal2 = 0.5 * vnormal + 0.5;\n    vec4 p = texture2D(uSampler, vTextureCoord);\n    p.a = vAlpha;\n    gl_FragColor = p; // vec4(normal2.x , normal2.y, normal2.z, 1.0);\n}`;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-cv/lib/drawfaceproject.js"],"names":["Object","defineProperty","exports","value","FaceDrawProject","shader_1","require","constructor","_gl","dispose","_vbo","deleteBuffer","_uvbo","_ibo","_shader","deleteProgram","prog","undefined","_generateIBO","indices","gl","_lastIndices","createBuffer","Error","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","_generateVBO","face","ARRAY_BUFFER","STREAM_DRAW","_generateUVBO","drawFace","matrix","vertices","uvMatrix","uvs","texture","shader","_getShader","v","u","i","enable","DEPTH_TEST","CULL_FACE","useProgram","uniformMatrix4fv","unif_matrix","unif_uvmatrix","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","unif_sampler","vertexAttribPointer","attr_position","FLOAT","enableVertexAttribArray","attr_uv","drawElements","TRIANGLES","UNSIGNED_SHORT","disableVertexAttribArray","createProgram","vertexShader","compileShader","VERTEX_SHADER","vertexShaderSrc","fragmentShader","FRAGMENT_SHADER","fragmentShaderSrc","attachShader","linkProgram","getUniformLocation","getAttribLocation","attr_texturecoord"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaceDrawProject = void 0;\nconst shader_1 = require(\"./shader\");\nclass FaceDrawProject {\n    constructor(_gl) {\n        this._gl = _gl;\n    }\n    dispose() {\n        if (this._vbo)\n            this._gl.deleteBuffer(this._vbo);\n        if (this._uvbo)\n            this._gl.deleteBuffer(this._uvbo);\n        if (this._ibo)\n            this._gl.deleteBuffer(this._ibo);\n        if (this._shader)\n            this._gl.deleteProgram(this._shader.prog);\n        this._vbo = undefined;\n        this._uvbo = undefined;\n        this._ibo = undefined;\n        this._shader = undefined;\n    }\n    _generateIBO(indices, gl) {\n        if (this._ibo && this._lastIndices === indices)\n            return this._ibo;\n        this._lastIndices = indices;\n        if (!this._ibo)\n            this._ibo = gl.createBuffer();\n        if (!this._ibo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return this._ibo;\n    }\n    _generateVBO(face, gl) {\n        if (!this._vbo)\n            this._vbo = gl.createBuffer();\n        if (!this._vbo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return this._vbo;\n    }\n    _generateUVBO(face, gl) {\n        if (!this._uvbo)\n            this._uvbo = gl.createBuffer();\n        if (!this._uvbo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvbo);\n        gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return this._uvbo;\n    }\n    drawFace(matrix, vertices, uvMatrix, uvs, indices, texture) {\n        let gl = this._gl;\n        let shader = this._getShader(gl);\n        let v = this._generateVBO(vertices, gl);\n        let u = this._generateUVBO(uvs, gl);\n        let i = this._generateIBO(indices, gl);\n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.CULL_FACE);\n        // gl.enable(gl.BLEND);\n        // gl.blendFunc(gl.ONE, gl.ONE);\n        // gl.blendEquation(gl.FUNC_SUBTRACT);\n        gl.useProgram(shader.prog);\n        gl.uniformMatrix4fv(shader.unif_matrix, false, matrix);\n        gl.uniformMatrix4fv(shader.unif_uvmatrix, false, uvMatrix);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.uniform1i(shader.unif_sampler, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, v);\n        gl.vertexAttribPointer(shader.attr_position, 3, gl.FLOAT, false, 3 * 4, 0);\n        gl.enableVertexAttribArray(shader.attr_position);\n        gl.bindBuffer(gl.ARRAY_BUFFER, u);\n        gl.vertexAttribPointer(shader.attr_uv, 3, gl.FLOAT, false, 3 * 4, 0);\n        gl.enableVertexAttribArray(shader.attr_uv);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, i);\n        gl.drawElements(gl.TRIANGLES, 2304 * 3, gl.UNSIGNED_SHORT, 0);\n        gl.disableVertexAttribArray(shader.attr_position);\n        gl.disableVertexAttribArray(shader.attr_uv);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    _getShader(gl) {\n        if (this._shader)\n            return this._shader;\n        let prog = gl.createProgram();\n        if (!prog)\n            throw new Error(\"Unable to create program\");\n        let vertexShader = shader_1.compileShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n        let fragmentShader = shader_1.compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSrc);\n        gl.attachShader(prog, vertexShader);\n        gl.attachShader(prog, fragmentShader);\n        shader_1.linkProgram(gl, prog);\n        let unif_matrix = gl.getUniformLocation(prog, \"matrix\");\n        if (!unif_matrix)\n            throw new Error(\"Unable to get uniform location matrix\");\n        let unif_uvmatrix = gl.getUniformLocation(prog, \"uvmatrix\");\n        if (!unif_uvmatrix)\n            throw new Error(\"Unable to get uniform location matrix\");\n        let unif_sampler = gl.getUniformLocation(prog, \"uSampler\");\n        if (!unif_sampler)\n            throw new Error(\"Unable to get uniform location sampler\");\n        this._shader = {\n            prog,\n            unif_matrix,\n            unif_sampler,\n            unif_uvmatrix,\n            attr_position: gl.getAttribLocation(prog, \"position\"),\n            attr_uv: gl.getAttribLocation(prog, \"uv\"),\n            attr_texturecoord: gl.getAttribLocation(prog, \"aTextureCoord\"),\n        };\n        return this._shader;\n    }\n}\nexports.FaceDrawProject = FaceDrawProject;\nlet vertexShaderSrc = `\n#ifndef GL_ES\n#define highp\n#define mediump\n#define lowp\n#endif\n\nuniform mat4 matrix;\nuniform mat4 uvmatrix;\nattribute vec4 position;\nattribute vec3 normal;\nattribute vec3 uv;\n\n// varying highp vec3 vnormal;\n\nvarying highp vec2 vTextureCoord;\nvarying highp float vAlpha;\n\nvoid main()\n{\n    gl_Position = matrix * position;\n    vec4 ret = uvmatrix * vec4(uv.x, uv.y, uv.z, 1.0);\n    ret.x /= ret.w * 2.0;\n    ret.y /= ret.w * 2.0;\n    ret.x += 0.5;\n    ret.y += 0.0;\n    vAlpha = 1.0;\n    vTextureCoord = ret.xy;\n}`;\nlet fragmentShaderSrc = `\n#define highp mediump\n#ifdef GL_ES\n    // define default precision for float, vec, mat.\n    precision highp float;\n#else\n#define highp\n#define mediump\n#define lowp\n#endif\n\nvarying highp vec2 vTextureCoord;\nvarying highp vec3 vnormal;\nvarying highp float vAlpha;\nuniform lowp sampler2D uSampler;\n\nvoid main()\n{\n    // vec3 normal2 = 0.5 * vnormal + 0.5;\n    vec4 p = texture2D(uSampler, vTextureCoord);\n    p.a = vAlpha;\n    gl_FragColor = p; // vec4(normal2.x , normal2.y, normal2.z, 1.0);\n}`;\n"]},"metadata":{},"sourceType":"script"}