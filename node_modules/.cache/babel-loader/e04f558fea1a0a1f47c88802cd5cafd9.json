{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.zcwarn = exports.zcerr = exports.zcout = exports.setLogLevel = void 0;\n\nconst zappar_1 = require(\"./gen/zappar\");\n\nlet logLevel = zappar_1.log_level_t.LOG_LEVEL_ERROR;\n\nfunction setLogLevel(l) {\n  logLevel = l;\n}\n\nexports.setLogLevel = setLogLevel;\n\nfunction zcout() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_VERBOSE) console.log(\"[Zappar] INFO\", ...args);\n}\n\nexports.zcout = zcout;\n\nfunction zcerr() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_ERROR) console.error(\"[Zappar] ERROR\", ...args);\n}\n\nexports.zcerr = zcerr;\n\nfunction zcwarn() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_VERBOSE) console.log(\"[Zappar] WARN\", ...args);\n}\n\nexports.zcwarn = zcwarn;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-cv/lib/loglevel.js"],"names":["Object","defineProperty","exports","value","zcwarn","zcerr","zcout","setLogLevel","zappar_1","require","logLevel","log_level_t","LOG_LEVEL_ERROR","l","args","LOG_LEVEL_VERBOSE","console","log","error"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACI,KAAR,GAAgBJ,OAAO,CAACK,WAAR,GAAsB,KAAK,CAA5E;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGF,QAAQ,CAACG,WAAT,CAAqBC,eAApC;;AACA,SAASL,WAAT,CAAqBM,CAArB,EAAwB;AACpBH,EAAAA,QAAQ,GAAGG,CAAX;AACH;;AACDX,OAAO,CAACK,WAAR,GAAsBA,WAAtB;;AACA,SAASD,KAAT,GAAwB;AAAA,oCAANQ,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACpB,MAAIJ,QAAQ,IAAIF,QAAQ,CAACG,WAAT,CAAqBI,iBAArC,EACIC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,GAAGH,IAAhC;AACP;;AACDZ,OAAO,CAACI,KAAR,GAAgBA,KAAhB;;AACA,SAASD,KAAT,GAAwB;AAAA,qCAANS,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACpB,MAAIJ,QAAQ,IAAIF,QAAQ,CAACG,WAAT,CAAqBC,eAArC,EACII,OAAO,CAACE,KAAR,CAAc,gBAAd,EAAgC,GAAGJ,IAAnC;AACP;;AACDZ,OAAO,CAACG,KAAR,GAAgBA,KAAhB;;AACA,SAASD,MAAT,GAAyB;AAAA,qCAANU,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACrB,MAAIJ,QAAQ,IAAIF,QAAQ,CAACG,WAAT,CAAqBI,iBAArC,EACIC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,GAAGH,IAAhC;AACP;;AACDZ,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zcwarn = exports.zcerr = exports.zcout = exports.setLogLevel = void 0;\nconst zappar_1 = require(\"./gen/zappar\");\nlet logLevel = zappar_1.log_level_t.LOG_LEVEL_ERROR;\nfunction setLogLevel(l) {\n    logLevel = l;\n}\nexports.setLogLevel = setLogLevel;\nfunction zcout(...args) {\n    if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_VERBOSE)\n        console.log(\"[Zappar] INFO\", ...args);\n}\nexports.zcout = zcout;\nfunction zcerr(...args) {\n    if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_ERROR)\n        console.error(\"[Zappar] ERROR\", ...args);\n}\nexports.zcerr = zcerr;\nfunction zcwarn(...args) {\n    if (logLevel >= zappar_1.log_level_t.LOG_LEVEL_VERBOSE)\n        console.log(\"[Zappar] WARN\", ...args);\n}\nexports.zcwarn = zcwarn;\n"]},"metadata":{},"sourceType":"script"}