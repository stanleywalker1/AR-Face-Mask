{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nfunction EnvironmentMap(_ref) {\n  let {\n    scene,\n    background = false,\n    map\n  } = _ref;\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\n\nfunction EnvironmentPortal(_ref2) {\n  let {\n    children,\n    near = 1,\n    far = 1000,\n    resolution = 256,\n    frames = 1,\n    background = false,\n    scene,\n    files,\n    path,\n    preset = undefined,\n    extensions\n  } = _ref2;\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\n\nfunction EnvironmentCube(_ref3) {\n  let {\n    background = false,\n    files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n    path = '',\n    preset = undefined,\n    scene,\n    extensions\n  } = _ref3;\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const defaultScene = useThree(state => state.scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/face-mask-demo/AR-Face-Mask/node_modules/@react-three/drei/core/Environment.js"],"names":["React","useThree","useFrame","createPortal","useLoader","Scene","WebGLCubeRenderTarget","HalfFloatType","FloatType","CubeReflectionMapping","EquirectangularReflectionMapping","CubeTextureLoader","RGBELoader","presetsObj","CUBEMAP_ROOT","isRef","obj","current","isScene","resolveScene","scene","Environment","props","map","createElement","EnvironmentMap","children","EnvironmentPortal","EnvironmentCube","background","defaultScene","state","useLayoutEffect","target","oldbg","oldenv","environment","near","far","resolution","frames","files","path","preset","undefined","extensions","gl","camera","useRef","virtualScene","useState","fbo","useMemo","texture","type","update","count","Infinity","Fragment","ref","args","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","setDataType","mapping"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  background = false,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\nfunction EnvironmentCube({\n  background = false,\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  scene,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const defaultScene = useThree(state => state.scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };\n"]},"metadata":{},"sourceType":"module"}