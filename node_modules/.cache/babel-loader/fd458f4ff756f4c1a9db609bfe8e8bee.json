{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTMLElementSource = void 0;\n\nconst zappar_1 = require(\"./zappar\");\n/**\n * Creates a source of frames from a HTML <video> or <img> element.\n * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n */\n\n\nclass HTMLElementSource {\n  /**\n   * Constructs a new HTMLElementSource.\n   * @param pipeline - The pipeline that this tracker will operate within.\n   * @param element -  The HTML source element.\n  */\n  constructor(pipeline, element) {\n    this._z = zappar_1.z();\n    this._impl = this._z.html_element_source_create(pipeline._getImpl(), element);\n  }\n  /**\n  * Destroys the source.\n  */\n\n\n  destroy() {\n    this._z.html_element_source_destroy(this._impl);\n  }\n  /**\n  * Starts the source sending frames into the pipeline.\n  *\n  * Starting a given source pauses any other sources within the same pipeline.\n  */\n\n\n  start() {\n    this._z.html_element_source_start(this._impl);\n  }\n  /**\n  * Pauses the source.\n  */\n\n\n  pause() {\n    this._z.html_element_source_pause(this._impl);\n  }\n\n}\n\nexports.HTMLElementSource = HTMLElementSource;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar/lib/htmlelementsource.js"],"names":["Object","defineProperty","exports","value","HTMLElementSource","zappar_1","require","constructor","pipeline","element","_z","z","_impl","html_element_source_create","_getImpl","destroy","html_element_source_destroy","start","html_element_source_start","pause","html_element_source_pause"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;AACA;AACA;AACA;AACA;;;AACA,MAAMF,iBAAN,CAAwB;AACpB;AACJ;AACA;AACA;AACA;AACIG,EAAAA,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoB;AAC3B,SAAKC,EAAL,GAAUL,QAAQ,CAACM,CAAT,EAAV;AACA,SAAKC,KAAL,GAAa,KAAKF,EAAL,CAAQG,0BAAR,CAAmCL,QAAQ,CAACM,QAAT,EAAnC,EAAwDL,OAAxD,CAAb;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,OAAO,GAAG;AACN,SAAKL,EAAL,CAAQM,2BAAR,CAAoC,KAAKJ,KAAzC;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIK,EAAAA,KAAK,GAAG;AACJ,SAAKP,EAAL,CAAQQ,yBAAR,CAAkC,KAAKN,KAAvC;AACH;AACD;AACJ;AACA;;;AACIO,EAAAA,KAAK,GAAG;AACJ,SAAKT,EAAL,CAAQU,yBAAR,CAAkC,KAAKR,KAAvC;AACH;;AA7BmB;;AA+BxBV,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTMLElementSource = void 0;\nconst zappar_1 = require(\"./zappar\");\n/**\n * Creates a source of frames from a HTML <video> or <img> element.\n * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n */\nclass HTMLElementSource {\n    /**\n     * Constructs a new HTMLElementSource.\n     * @param pipeline - The pipeline that this tracker will operate within.\n     * @param element -  The HTML source element.\n    */\n    constructor(pipeline, element) {\n        this._z = zappar_1.z();\n        this._impl = this._z.html_element_source_create(pipeline._getImpl(), element);\n    }\n    /**\n    * Destroys the source.\n    */\n    destroy() {\n        this._z.html_element_source_destroy(this._impl);\n    }\n    /**\n    * Starts the source sending frames into the pipeline.\n    *\n    * Starting a given source pauses any other sources within the same pipeline.\n    */\n    start() {\n        this._z.html_element_source_start(this._impl);\n    }\n    /**\n    * Pauses the source.\n    */\n    pause() {\n        this._z.html_element_source_pause(this._impl);\n    }\n}\nexports.HTMLElementSource = HTMLElementSource;\n"]},"metadata":{},"sourceType":"script"}