{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RecognizerEngine = void 0;\n\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar flatten_1 = __importDefault(require(\"lodash/flatten\"));\n\nvar every_1 = __importDefault(require(\"lodash/every\"));\n\nvar uniq_1 = __importDefault(require(\"lodash/uniq\"));\n\nvar isObject_1 = __importDefault(require(\"lodash/isObject\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar values_1 = __importDefault(require(\"lodash/values\"));\n\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\n\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\n\nvar keys_1 = require(\"../../grammar/keys\");\n\nvar exceptions_public_1 = require(\"../../exceptions_public\");\n\nvar lookahead_1 = require(\"../../grammar/lookahead\");\n\nvar interpreter_1 = require(\"../../grammar/interpreter\");\n\nvar parser_1 = require(\"../parser\");\n\nvar recoverable_1 = require(\"./recoverable\");\n\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\n\nvar tokens_1 = require(\"../../../scan/tokens\");\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\n\n\nvar RecognizerEngine =\n/** @class */\nfunction () {\n  function RecognizerEngine() {}\n\n  RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n    this.className = this.constructor.name; // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokens_1.tokenStructuredMatcherNoCategories;\n    this.subruleIdx = 0;\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n\n    if ((0, has_1.default)(config, \"serializedGrammar\")) {\n      throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" + \"\\tFor Further details.\");\n    }\n\n    if ((0, isArray_1.default)(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if ((0, isEmpty_1.default)(tokenVocabulary)) {\n        throw Error(\"A Token Vocabulary cannot be empty.\\n\" + \"\\tNote that the first argument for the parser constructor\\n\" + \"\\tis no longer a Token vector (since v4.0).\");\n      }\n\n      if (typeof tokenVocabulary[0].startOffset === \"number\") {\n        throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" + \"\\tFor Further details.\");\n      }\n    }\n\n    if ((0, isArray_1.default)(tokenVocabulary)) {\n      this.tokensMap = (0, reduce_1.default)(tokenVocabulary, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if ((0, has_1.default)(tokenVocabulary, \"modes\") && (0, every_1.default)((0, flatten_1.default)((0, values_1.default)(tokenVocabulary.modes)), tokens_1.isTokenType)) {\n      var allTokenTypes_1 = (0, flatten_1.default)((0, values_1.default)(tokenVocabulary.modes));\n      var uniqueTokens = (0, uniq_1.default)(allTokenTypes_1);\n      this.tokensMap = (0, reduce_1.default)(uniqueTokens, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if ((0, isObject_1.default)(tokenVocabulary)) {\n      this.tokensMap = (0, clone_1.default)(tokenVocabulary);\n    } else {\n      throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" + \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n    } // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n\n\n    this.tokensMap[\"EOF\"] = tokens_public_1.EOF;\n    var allTokenTypes = (0, has_1.default)(tokenVocabulary, \"modes\") ? (0, flatten_1.default)((0, values_1.default)(tokenVocabulary.modes)) : (0, values_1.default)(tokenVocabulary);\n    var noTokenCategoriesUsed = (0, every_1.default)(allTokenTypes, function (tokenConstructor) {\n      return (0, isEmpty_1.default)(tokenConstructor.categoryMatches);\n    });\n    this.tokenMatcher = noTokenCategoriesUsed ? tokens_1.tokenStructuredMatcherNoCategories : tokens_1.tokenStructuredMatcher; // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n\n    (0, tokens_1.augmentTokenTypes)((0, values_1.default)(this.tokensMap));\n  };\n\n  RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n    if (this.selfAnalysisDone) {\n      throw Error(\"Grammar rule <\".concat(ruleName, \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\") + \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n    }\n\n    var resyncEnabled = (0, has_1.default)(config, \"resyncEnabled\") ? config.resyncEnabled // assumes end user provides the correct config value/type\n    : parser_1.DEFAULT_RULE_CONFIG.resyncEnabled;\n    var recoveryValueFunc = (0, has_1.default)(config, \"recoveryValueFunc\") ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n    : parser_1.DEFAULT_RULE_CONFIG.recoveryValueFunc; // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n\n    var shortName = this.ruleShortNameIdx << keys_1.BITS_FOR_METHOD_TYPE + keys_1.BITS_FOR_OCCURRENCE_IDX;\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n    var invokeRuleWithTry; // Micro optimization, only check the condition **once** on rule definition\n    // instead of **every single** rule invocation.\n\n    if (this.outputCst === true) {\n      invokeRuleWithTry = function invokeRuleWithTry() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          impl.apply(this, args);\n          var cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst;\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    } else {\n      invokeRuleWithTry = function invokeRuleWithTryCst() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        try {\n          this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n          return impl.apply(this, args);\n        } catch (e) {\n          return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n        } finally {\n          this.ruleFinallyStateUpdate();\n        }\n      };\n    }\n\n    var wrappedGrammarRule = Object.assign(invokeRuleWithTry, {\n      ruleName: ruleName,\n      originalGrammarAction: impl\n    });\n    return wrappedGrammarRule;\n  };\n\n  RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n    var isFirstInvokedRule = this.RULE_STACK.length === 1; // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n\n    var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n\n    if ((0, exceptions_public_1.isRecognitionException)(e)) {\n      var recogError = e;\n\n      if (reSyncEnabled) {\n        var reSyncTokType = this.findReSyncTokenType();\n\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc();\n          }\n        } else {\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          } // to be handled Further up the call stack\n\n\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState(); // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n\n        return recoveryValueFunc();\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  }; // Implementation of parsing DSL\n\n\n  RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n    var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  };\n\n  RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      var predicate_1 = actionORMethodDef.GATE; // predicate present\n\n      if (predicate_1 !== undefined) {\n        var orgLookaheadFunction_1 = lookAheadFunc;\n\n        lookAheadFunc = function () {\n          return predicate_1.call(_this) && orgLookaheadFunction_1.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n\n    return undefined;\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);\n    return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      var predicate_2 = actionORMethodDef.GATE; // predicate present\n\n      if (predicate_2 !== undefined) {\n        var orgLookaheadFunction_2 = lookAheadFunc;\n\n        lookAheadFunc = function () {\n          return predicate_2.call(_this) && orgLookaheadFunction_2.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      var notStuck = this.doSingleRepetition(action);\n\n      while (lookAheadFunc.call(this) === true && notStuck === true) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n    } // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, keys_1.AT_LEAST_ONE_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneWalker);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLookaheadFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;\n      action.call(this); //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, interpreter_1.NextTerminalAfterAtLeastOneSepWalker], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneSepWalker);\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n    }\n  };\n\n  RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookaheadFunction = this.getLaFuncFromCache(key);\n    var action;\n\n    if (typeof actionORMethodDef !== \"function\") {\n      action = actionORMethodDef.DEF;\n      var predicate_3 = actionORMethodDef.GATE; // predicate present\n\n      if (predicate_3 !== undefined) {\n        var orgLookaheadFunction_3 = lookaheadFunction;\n\n        lookaheadFunction = function () {\n          return predicate_3.call(_this) && orgLookaheadFunction_3.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    var notStuck = true;\n\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, keys_1.MANY_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManyWalker, // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n    // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n    // An infinite loop cannot occur as:\n    // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n    // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n    notStuck);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLaFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator); // No need for checking infinite loop here due to consuming the separator.\n\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, interpreter_1.NextTerminalAfterManySepWalker], separatorLookAheadFunc, keys_1.MANY_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManySepWalker);\n    }\n  };\n\n  RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    } // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n    /* istanbul ignore else */\n\n\n    this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n  };\n\n  RecognizerEngine.prototype.doSingleRepetition = function (action) {\n    var beforeIteration = this.getLexerPosition();\n    action.call(this);\n    var afterIteration = this.getLexerPosition(); // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n\n    return afterIteration > beforeIteration;\n  };\n\n  RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);\n    var alts = (0, isArray_1.default)(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n    var laFunc = this.getLaFuncFromCache(laKey);\n    var altIdxToTake = laFunc.call(this, alts);\n\n    if (altIdxToTake !== undefined) {\n      var chosenAlternative = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n\n    this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n  };\n\n  RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop(); // NOOP when cst is disabled\n\n    this.cstFinallyStateUpdate();\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      var firstRedundantTok = this.LA(1);\n      var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      });\n      this.SAVE_ERROR(new exceptions_public_1.NotAllInputParsedException(errMsg, firstRedundantTok));\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n    var ruleResult;\n\n    try {\n      var args = options !== undefined ? options.ARGS : undefined;\n      this.subruleIdx = idx;\n      ruleResult = ruleToCall.apply(this, args);\n      this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleToCall.ruleName);\n      return ruleResult;\n    } catch (e) {\n      throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n    if ((0, exceptions_public_1.isRecognitionException)(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleName);\n      delete e.partialCstResult;\n    }\n\n    throw e;\n  };\n\n  RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n    var consumedToken;\n\n    try {\n      var nextToken = this.LA(1);\n\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n    }\n\n    this.cstPostTerminal(options !== undefined && options.LABEL !== undefined ? options.LABEL : tokType.name, consumedToken);\n    return consumedToken;\n  };\n\n  RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n    var msg;\n    var previousToken = this.LA(0);\n\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      });\n    }\n\n    throw this.SAVE_ERROR(new exceptions_public_1.MismatchedTokenException(msg, nextToken, previousToken));\n  };\n\n  RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (this.recoveryEnabled && // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n    eFromConsumption.name === \"MismatchedTokenException\" && !this.isBackTracking()) {\n      var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n\n      try {\n        return this.tryInRuleRecovery(tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === recoverable_1.IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  };\n\n  RecognizerEngine.prototype.saveRecogState = function () {\n    // errors is a getter which will clone the errors array\n    var savedErrors = this.errors;\n    var savedRuleStack = (0, clone_1.default)(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    };\n  };\n\n  RecognizerEngine.prototype.reloadRecogState = function (newState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  };\n\n  RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName); // NOOP when cst is disabled\n\n    this.cstInvocationStateUpdate(fullName);\n  };\n\n  RecognizerEngine.prototype.isBackTracking = function () {\n    return this.isBackTrackingStack.length !== 0;\n  };\n\n  RecognizerEngine.prototype.getCurrRuleFullName = function () {\n    var shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.isAtEndOfInput = function () {\n    return this.tokenMatcher(this.LA(1), tokens_public_1.EOF);\n  };\n\n  RecognizerEngine.prototype.reset = function () {\n    this.resetLexerState();\n    this.subruleIdx = 0;\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = []; // TODO: extract a specific reset for TreeBuilder trait\n\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  };\n\n  return RecognizerEngine;\n}();\n\nexports.RecognizerEngine = RecognizerEngine;","map":{"version":3,"mappings":"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","names":["RecognizerEngine","tokenVocabulary","config","className","constructor","name","shortRuleNameToFull","fullRuleNameToShort","ruleShortNameIdx","tokenMatcher","tokens_1","subruleIdx","definedRulesNames","tokensMap","isBackTrackingStack","RULE_STACK","RULE_OCCURRENCE_STACK","gastProductionsCache","Error","startOffset","acc","tokType","modes","allTokenTypes_1","uniqueTokens","tokens_public_1","allTokenTypes","noTokenCategoriesUsed","tokenConstructor","categoryMatches","ruleName","impl","selfAnalysisDone","resyncEnabled","parser_1","recoveryValueFunc","shortName","keys_1","invokeRuleWithTry","outputCst","args","ruleInvocationStateUpdate","apply","cst","CST_STACK","length","cstPostRule","e","invokeRuleCatch","ruleFinallyStateUpdate","invokeRuleWithTryCst","wrappedGrammarRule","Object","assign","originalGrammarAction","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","isBackTracking","recoveryEnabled","recogError","reSyncTokType","findReSyncTokenType","isInCurrentRuleReSyncSet","resyncedTokens","reSyncTo","partialCstResult","recoveredNode","moveToTerminatedState","actionORMethodDef","occurrence","key","getKeyForAutomaticLookahead","optionInternalLogic","lookAheadFunc","getLaFuncFromCache","action","DEF","predicate_1","GATE","undefined","orgLookaheadFunction_1","call","_this","prodOccurrence","laKey","atLeastOneInternalLogic","predicate_2","orgLookaheadFunction_2","notStuck","doSingleRepetition","raiseEarlyExitException","lookahead_1","REPETITION_MANDATORY","ERR_MSG","attemptInRepetitionRecovery","atLeastOneInternal","interpreter_1","options","atLeastOneSepFirstInternalLogic","separator","SEP","firstIterationLookaheadFunc","separatorLookAheadFunc","LA","CONSUME","repetitionSepSecondInternal","REPETITION_MANDATORY_WITH_SEPARATOR","manyInternalLogic","lookaheadFunction","predicate_3","orgLookaheadFunction_3","manyInternal","manySepFirstInternalLogic","firstIterationLaFunc","nextTerminalAfterWalker","beforeIteration","getLexerPosition","afterIteration","altsOrOpts","alts","laFunc","altIdxToTake","chosenAlternative","ALT","raiseNoAltException","pop","cstFinallyStateUpdate","isAtEndOfInput","firstRedundantTok","errMsg","errorMessageProvider","buildNotAllInputParsedMessage","firstRedundant","getCurrRuleFullName","SAVE_ERROR","exceptions_public_1","ruleToCall","idx","ruleResult","ARGS","cstPostNonTerminal","LABEL","subruleInternalError","consumedToken","nextToken","consumeToken","consumeInternalError","eFromConsumption","consumeInternalRecovery","cstPostTerminal","msg","previousToken","buildMismatchTokenMessage","expected","actual","previous","follows","getFollowsForInRuleRecovery","tryInRuleRecovery","eFromInRuleRecovery","recoverable_1","savedErrors","errors","savedRuleStack","lexerState","exportLexerState","newState","importLexerState","fullName","idxInCallingRule","push","cstInvocationStateUpdate","getLastExplicitRuleShortName","resetLexerState","exports"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/recognizer_engine.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}