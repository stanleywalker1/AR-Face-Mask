{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\n\nvar tokens_public_1 = require(\"../scan/tokens_public\");\n\nvar first_1 = __importDefault(require(\"lodash/first\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nvar gast_2 = require(\"@chevrotain/gast\");\n\nexports.defaultParserErrorProvider = {\n  buildMismatchTokenMessage: function (_a) {\n    var expected = _a.expected,\n        actual = _a.actual,\n        previous = _a.previous,\n        ruleName = _a.ruleName;\n    var hasLabel = (0, tokens_public_1.hasTokenLabel)(expected);\n    var expectedMsg = hasLabel ? \"--> \".concat((0, tokens_public_1.tokenLabel)(expected), \" <--\") : \"token of type --> \".concat(expected.name, \" <--\");\n    var msg = \"Expecting \".concat(expectedMsg, \" but found --> '\").concat(actual.image, \"' <--\");\n    return msg;\n  },\n  buildNotAllInputParsedMessage: function (_a) {\n    var firstRedundant = _a.firstRedundant,\n        ruleName = _a.ruleName;\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n  buildNoViableAltMessage: function (_a) {\n    var expectedPathsPerAlt = _a.expectedPathsPerAlt,\n        actual = _a.actual,\n        previous = _a.previous,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = (0, first_1.default)(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var allLookAheadPaths = (0, reduce_1.default)(expectedPathsPerAlt, function (result, currAltPaths) {\n        return result.concat(currAltPaths);\n      }, []);\n      var nextValidTokenSequences = (0, map_1.default)(allLookAheadPaths, function (currPath) {\n        return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) {\n          return (0, tokens_public_1.tokenLabel)(currTokenType);\n        }).join(\", \"), \"]\");\n      });\n      var nextValidSequenceItems = (0, map_1.default)(nextValidTokenSequences, function (itemMsg, idx) {\n        return \"  \".concat(idx + 1, \". \").concat(itemMsg);\n      });\n      var calculatedDescription = \"one of these possible Token sequences:\\n\".concat(nextValidSequenceItems.join(\"\\n\"));\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n  buildEarlyExitMessage: function (_a) {\n    var expectedIterationPaths = _a.expectedIterationPaths,\n        actual = _a.actual,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = (0, first_1.default)(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var nextValidTokenSequences = (0, map_1.default)(expectedIterationPaths, function (currPath) {\n        return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) {\n          return (0, tokens_public_1.tokenLabel)(currTokenType);\n        }).join(\",\"), \"]\");\n      });\n      var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" + \"<\".concat(nextValidTokenSequences.join(\" ,\"), \">\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n  buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n    var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" + undefinedRule.nonTerminalName + \"<-\\n\" + \"inside top level rule: ->\" + topLevelRule.name + \"<-\";\n    return msg;\n  }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n  buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n    function getExtraProductionArgument(prod) {\n      if (prod instanceof gast_1.Terminal) {\n        return prod.terminalType.name;\n      } else if (prod instanceof gast_1.NonTerminal) {\n        return prod.nonTerminalName;\n      } else {\n        return \"\";\n      }\n    }\n\n    var topLevelName = topLevelRule.name;\n    var duplicateProd = (0, first_1.default)(duplicateProds);\n    var index = duplicateProd.idx;\n    var dslName = (0, gast_2.getProductionDslName)(duplicateProd);\n    var extraArgument = getExtraProductionArgument(duplicateProd);\n    var hasExplicitIndex = index > 0;\n    var msg = \"->\".concat(dslName).concat(hasExplicitIndex ? index : \"\", \"<- \").concat(extraArgument ? \"with argument: ->\".concat(extraArgument, \"<-\") : \"\", \"\\n                  appears more than once (\").concat(duplicateProds.length, \" times) in the top level rule: ->\").concat(topLevelName, \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \"); // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n\n    msg = msg.replace(/[ \\t]+/g, \" \");\n    msg = msg.replace(/\\s\\s+/g, \"\\n\");\n    return msg;\n  },\n  buildNamespaceConflictError: function (rule) {\n    var errMsg = \"Namespace conflict found in grammar.\\n\" + \"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\".concat(rule.name, \">.\\n\") + \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" + \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" + \"and Non-Terminal names start with a lower case letter.\";\n    return errMsg;\n  },\n  buildAlternationPrefixAmbiguityError: function (options) {\n    var pathMsg = (0, map_1.default)(options.prefixPath, function (currTok) {\n      return (0, tokens_public_1.tokenLabel)(currTok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var errMsg = \"Ambiguous alternatives: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> due to common lookahead prefix\\n\") + \"in <OR\".concat(occurrence, \"> inside <\").concat(options.topLevelRule.name, \"> Rule,\\n\") + \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\") + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" + \"For Further details.\";\n    return errMsg;\n  },\n  buildAlternationAmbiguityError: function (options) {\n    var pathMsg = (0, map_1.default)(options.prefixPath, function (currtok) {\n      return (0, tokens_public_1.tokenLabel)(currtok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var currMessage = \"Ambiguous Alternatives Detected: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> in <OR\").concat(occurrence, \">\") + \" inside <\".concat(options.topLevelRule.name, \"> Rule,\\n\") + \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\");\n    currMessage = currMessage + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" + \"For Further details.\";\n    return currMessage;\n  },\n  buildEmptyRepetitionError: function (options) {\n    var dslName = (0, gast_2.getProductionDslName)(options.repetition);\n\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx;\n    }\n\n    var errMsg = \"The repetition <\".concat(dslName, \"> within Rule <\").concat(options.topLevelRule.name, \"> can never consume any tokens.\\n\") + \"This could lead to an infinite loop.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildEmptyAlternationError: function (options) {\n    var errMsg = \"Ambiguous empty alternative: <\".concat(options.emptyChoiceIdx + 1, \">\") + \" in <OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n\") + \"Only the last alternative may be an empty alternative.\";\n    return errMsg;\n  },\n  buildTooManyAlternativesError: function (options) {\n    var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" + \"<OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n has \").concat(options.alternation.definition.length + 1, \" alternatives.\");\n    return errMsg;\n  },\n  buildLeftRecursionError: function (options) {\n    var ruleName = options.topLevelRule.name;\n    var pathNames = (0, map_1.default)(options.leftRecursionPath, function (currRule) {\n      return currRule.name;\n    });\n    var leftRecursivePath = \"\".concat(ruleName, \" --> \").concat(pathNames.concat([ruleName]).join(\" --> \"));\n    var errMsg = \"Left Recursion found in grammar.\\n\" + \"rule: <\".concat(ruleName, \"> can be invoked from itself (directly or indirectly)\\n\") + \"without consuming any Tokens. The grammar path that causes this is: \\n \".concat(leftRecursivePath, \"\\n\") + \" To fix this refactor your grammar to remove the left recursion.\\n\" + \"see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildDuplicateRuleNameError: function (options) {\n    var ruleName;\n\n    if (options.topLevelRule instanceof gast_1.Rule) {\n      ruleName = options.topLevelRule.name;\n    } else {\n      ruleName = options.topLevelRule;\n    }\n\n    var errMsg = \"Duplicate definition, rule: ->\".concat(ruleName, \"<- is already defined in the grammar: ->\").concat(options.grammarName, \"<-\");\n    return errMsg;\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","buildMismatchTokenMessage","_a","expected","actual","previous","ruleName","hasLabel","expectedMsg","name","msg","concat","image","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","actualText","errSuffix","allLookAheadPaths","result","currAltPaths","nextValidTokenSequences","currPath","currTokenType","join","nextValidSequenceItems","itemMsg","idx","calculatedDescription","buildEarlyExitMessage","expectedIterationPaths","Object","freeze","buildRuleNotFoundError","topLevelRule","undefinedRule","nonTerminalName","buildDuplicateFoundError","duplicateProds","getExtraProductionArgument","prod","gast_1","terminalType","topLevelName","duplicateProd","index","dslName","extraArgument","hasExplicitIndex","length","replace","buildNamespaceConflictError","rule","errMsg","buildAlternationPrefixAmbiguityError","options","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","definition","buildLeftRecursionError","pathNames","leftRecursionPath","currRule","leftRecursivePath","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName"],"sourceRoot":"","sources":["../../../src/parse/errors_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}