{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CameraSource = void 0;\n\nconst zappar_1 = require(\"./zappar\");\n/**\n * Creates a source of frames from a device camera.\n * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n */\n\n\nclass CameraSource {\n  /**\n   * Constructs a new CameraSource.\n   * @param _pipeline - The pipeline that this tracker will operate within.\n   * @param deviceId - The camera device ID which will be used as the source.\n   * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n  */\n  constructor(pipeline, deviceId) {\n    this._z = zappar_1.z();\n    this._impl = this._z.camera_source_create(pipeline._getImpl(), deviceId);\n  }\n  /**\n  * Destroys the camera source.\n  */\n\n\n  destroy() {\n    this._z.camera_source_destroy(this._impl);\n  }\n  /**\n  * Starts the camera source.\n  *\n  * Starting a given source pauses any other sources within the same pipeline.\n  */\n\n\n  start() {\n    this._z.camera_source_start(this._impl);\n  }\n  /**\n  * Pauses the camera source.\n  */\n\n\n  pause() {\n    this._z.camera_source_pause(this._impl);\n  }\n\n}\n\nexports.CameraSource = CameraSource;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar/lib/camerasource.js"],"names":["Object","defineProperty","exports","value","CameraSource","zappar_1","require","constructor","pipeline","deviceId","_z","z","_impl","camera_source_create","_getImpl","destroy","camera_source_destroy","start","camera_source_start","pause","camera_source_pause"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;AACA;AACA;AACA;AACA;;;AACA,MAAMF,YAAN,CAAmB;AACf;AACJ;AACA;AACA;AACA;AACA;AACIG,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC5B,SAAKC,EAAL,GAAUL,QAAQ,CAACM,CAAT,EAAV;AACA,SAAKC,KAAL,GAAa,KAAKF,EAAL,CAAQG,oBAAR,CAA6BL,QAAQ,CAACM,QAAT,EAA7B,EAAkDL,QAAlD,CAAb;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,OAAO,GAAG;AACN,SAAKL,EAAL,CAAQM,qBAAR,CAA8B,KAAKJ,KAAnC;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIK,EAAAA,KAAK,GAAG;AACJ,SAAKP,EAAL,CAAQQ,mBAAR,CAA4B,KAAKN,KAAjC;AACH;AACD;AACJ;AACA;;;AACIO,EAAAA,KAAK,GAAG;AACJ,SAAKT,EAAL,CAAQU,mBAAR,CAA4B,KAAKR,KAAjC;AACH;;AA9Bc;;AAgCnBV,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CameraSource = void 0;\nconst zappar_1 = require(\"./zappar\");\n/**\n * Creates a source of frames from a device camera.\n * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n */\nclass CameraSource {\n    /**\n     * Constructs a new CameraSource.\n     * @param _pipeline - The pipeline that this tracker will operate within.\n     * @param deviceId - The camera device ID which will be used as the source.\n     * @see https://docs.zap.works/universal-ar/javascript/pipelines-and-camera-processing/\n    */\n    constructor(pipeline, deviceId) {\n        this._z = zappar_1.z();\n        this._impl = this._z.camera_source_create(pipeline._getImpl(), deviceId);\n    }\n    /**\n    * Destroys the camera source.\n    */\n    destroy() {\n        this._z.camera_source_destroy(this._impl);\n    }\n    /**\n    * Starts the camera source.\n    *\n    * Starting a given source pauses any other sources within the same pipeline.\n    */\n    start() {\n        this._z.camera_source_start(this._impl);\n    }\n    /**\n    * Pauses the camera source.\n    */\n    pause() {\n        this._z.camera_source_pause(this._impl);\n    }\n}\nexports.CameraSource = CameraSource;\n"]},"metadata":{},"sourceType":"script"}