{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GastRecorder = void 0;\n\nvar last_1 = __importDefault(require(\"lodash/last\"));\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar isFunction_1 = __importDefault(require(\"lodash/isFunction\"));\n\nvar has_1 = __importDefault(require(\"lodash/has\"));\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nvar lexer_public_1 = require(\"../../../scan/lexer_public\");\n\nvar tokens_1 = require(\"../../../scan/tokens\");\n\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\n\nvar parser_1 = require(\"../parser\");\n\nvar keys_1 = require(\"../../grammar/keys\");\n\nvar RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\"\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nvar HANDLE_SEPARATOR = true;\nvar MAX_METHOD_IDX = Math.pow(2, keys_1.BITS_FOR_OCCURRENCE_IDX) - 1;\nvar RFT = (0, tokens_public_1.createToken)({\n  name: \"RECORDING_PHASE_TOKEN\",\n  pattern: lexer_public_1.Lexer.NA\n});\n(0, tokens_1.augmentTokenTypes)([RFT]);\nvar RECORDING_PHASE_TOKEN = (0, tokens_public_1.createTokenInstance)(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" + \"\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nvar RECORDING_PHASE_CSTNODE = {\n  name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {}\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\n\nvar GastRecorder =\n/** @class */\nfunction () {\n  function GastRecorder() {}\n\n  GastRecorder.prototype.initGastRecorder = function (config) {\n    this.recordingProdStack = [];\n    this.RECORDING_PHASE = false;\n  };\n\n  GastRecorder.prototype.enableRecording = function () {\n    var _this = this;\n\n    this.RECORDING_PHASE = true;\n    this.TRACE_INIT(\"Enable Recording\", function () {\n      var _loop_1 = function (i) {\n        var idx = i > 0 ? i : \"\";\n\n        _this[\"CONSUME\".concat(idx)] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2);\n        };\n\n        _this[\"SUBRULE\".concat(idx)] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2);\n        };\n\n        _this[\"OPTION\".concat(idx)] = function (arg1) {\n          return this.optionInternalRecord(arg1, i);\n        };\n\n        _this[\"OR\".concat(idx)] = function (arg1) {\n          return this.orInternalRecord(arg1, i);\n        };\n\n        _this[\"MANY\".concat(idx)] = function (arg1) {\n          this.manyInternalRecord(i, arg1);\n        };\n\n        _this[\"MANY_SEP\".concat(idx)] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1);\n        };\n\n        _this[\"AT_LEAST_ONE\".concat(idx)] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1);\n        };\n\n        _this[\"AT_LEAST_ONE_SEP\".concat(idx)] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1);\n        };\n      };\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n\n\n      for (var i = 0; i < 10; i++) {\n        _loop_1(i);\n      } // DSL methods with the idx(suffix) as an argument\n\n\n      _this[\"consume\"] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2);\n      };\n\n      _this[\"subrule\"] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2);\n      };\n\n      _this[\"option\"] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx);\n      };\n\n      _this[\"or\"] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx);\n      };\n\n      _this[\"many\"] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1);\n      };\n\n      _this[\"atLeastOne\"] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1);\n      };\n\n      _this.ACTION = _this.ACTION_RECORD;\n      _this.BACKTRACK = _this.BACKTRACK_RECORD;\n      _this.LA = _this.LA_RECORD;\n    });\n  };\n\n  GastRecorder.prototype.disableRecording = function () {\n    var _this = this;\n\n    this.RECORDING_PHASE = false; // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n\n    this.TRACE_INIT(\"Deleting Recording methods\", function () {\n      var that = _this;\n\n      for (var i = 0; i < 10; i++) {\n        var idx = i > 0 ? i : \"\";\n        delete that[\"CONSUME\".concat(idx)];\n        delete that[\"SUBRULE\".concat(idx)];\n        delete that[\"OPTION\".concat(idx)];\n        delete that[\"OR\".concat(idx)];\n        delete that[\"MANY\".concat(idx)];\n        delete that[\"MANY_SEP\".concat(idx)];\n        delete that[\"AT_LEAST_ONE\".concat(idx)];\n        delete that[\"AT_LEAST_ONE_SEP\".concat(idx)];\n      }\n\n      delete that[\"consume\"];\n      delete that[\"subrule\"];\n      delete that[\"option\"];\n      delete that[\"or\"];\n      delete that[\"many\"];\n      delete that[\"atLeastOne\"];\n      delete that.ACTION;\n      delete that.BACKTRACK;\n      delete that.LA;\n    });\n  }; //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  // @ts-expect-error -- noop place holder\n\n\n  GastRecorder.prototype.ACTION_RECORD = function (impl) {// NO-OP during recording\n  }; // Executing backtracking logic will break our recording logic assumptions\n\n\n  GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {\n    return function () {\n      return true;\n    };\n  }; // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n\n\n  GastRecorder.prototype.LA_RECORD = function (howMuch) {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return parser_1.END_OF_FILE;\n  };\n\n  GastRecorder.prototype.topLevelRuleRecord = function (name, def) {\n    try {\n      var newTopLevelRule = new gast_1.Rule({\n        definition: [],\n        name: name\n      });\n      newTopLevelRule.name = name;\n      this.recordingProdStack.push(newTopLevelRule);\n      def.call(this);\n      this.recordingProdStack.pop();\n      return newTopLevelRule;\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message = originalError.message + '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' + \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError;\n        }\n      }\n\n      throw originalError;\n    }\n  }; // Implementation of parsing DSL\n\n\n  GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {\n    return recordProd.call(this, gast_1.Option, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, gast_1.RepetitionMandatory, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, gast_1.RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n\n  GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, gast_1.Repetition, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, gast_1.RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n\n  GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {\n    return recordOrProd.call(this, altsOrOpts, occurrence);\n  };\n\n  GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n\n    if (!ruleToCall || (0, has_1.default)(ruleToCall, \"ruleName\") === false) {\n      var error = new Error(\"<SUBRULE\".concat(getIdxSuffix(occurrence), \"> argument is invalid\") + \" expecting a Parser method reference but got: <\".concat(JSON.stringify(ruleToCall), \">\") + \"\\n inside top level rule: <\".concat(this.recordingProdStack[0].name, \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    var prevProd = (0, last_1.default)(this.recordingProdStack);\n    var ruleName = ruleToCall.ruleName;\n    var newNoneTerminal = new gast_1.NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      label: options === null || options === void 0 ? void 0 : options.LABEL,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return this.outputCst ? RECORDING_PHASE_CSTNODE : RECORDING_NULL_OBJECT;\n  };\n\n  GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n\n    if (!(0, tokens_1.hasShortKeyProperty)(tokType)) {\n      var error = new Error(\"<CONSUME\".concat(getIdxSuffix(occurrence), \"> argument is invalid\") + \" expecting a TokenType reference but got: <\".concat(JSON.stringify(tokType), \">\") + \"\\n inside top level rule: <\".concat(this.recordingProdStack[0].name, \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    var prevProd = (0, last_1.default)(this.recordingProdStack);\n    var newNoneTerminal = new gast_1.Terminal({\n      idx: occurrence,\n      terminalType: tokType,\n      label: options === null || options === void 0 ? void 0 : options.LABEL\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return RECORDING_PHASE_TOKEN;\n  };\n\n  return GastRecorder;\n}();\n\nexports.GastRecorder = GastRecorder;\n\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {\n  if (handleSep === void 0) {\n    handleSep = false;\n  }\n\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = (0, last_1.default)(this.recordingProdStack);\n  var grammarAction = (0, isFunction_1.default)(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n  var newProd = new prodConstructor({\n    definition: [],\n    idx: occurrence\n  });\n\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP;\n  }\n\n  if ((0, has_1.default)(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  this.recordingProdStack.push(newProd);\n  grammarAction.call(this);\n  prevProd.definition.push(newProd);\n  this.recordingProdStack.pop();\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction recordOrProd(mainProdArg, occurrence) {\n  var _this = this;\n\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = (0, last_1.default)(this.recordingProdStack); // Only an array of alternatives\n\n  var hasOptions = (0, isArray_1.default)(mainProdArg) === false;\n  var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n  var newOrProd = new gast_1.Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n  });\n\n  if ((0, has_1.default)(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  var hasPredicates = (0, some_1.default)(alts, function (currAlt) {\n    return (0, isFunction_1.default)(currAlt.GATE);\n  });\n  newOrProd.hasPredicates = hasPredicates;\n  prevProd.definition.push(newOrProd);\n  (0, forEach_1.default)(alts, function (currAlt) {\n    var currAltFlat = new gast_1.Alternative({\n      definition: []\n    });\n    newOrProd.definition.push(currAltFlat);\n\n    if ((0, has_1.default)(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n    } // **implicit** ignoreAmbiguities due to usage of gate\n    else if ((0, has_1.default)(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true;\n    }\n\n    _this.recordingProdStack.push(currAltFlat);\n\n    currAlt.ALT.call(_this);\n\n    _this.recordingProdStack.pop();\n  });\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction getIdxSuffix(idx) {\n  return idx === 0 ? \"\" : \"\".concat(idx);\n}\n\nfunction assertMethodIdxIsValid(idx) {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    var error = new Error( // The stack trace will contain all the needed details\n    \"Invalid DSL Method idx value: <\".concat(idx, \">\\n\\t\") + \"Idx value must be a none negative value smaller than \".concat(MAX_METHOD_IDX + 1));\n    error.KNOWN_RECORDER_ERROR = true;\n    throw error;\n  }\n}","map":{"version":3,"mappings":"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","names":["RECORDING_NULL_OBJECT","description","Object","freeze","HANDLE_SEPARATOR","MAX_METHOD_IDX","Math","pow","keys_1","RFT","name","pattern","lexer_public_1","NA","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","children","GastRecorder","config","recordingProdStack","RECORDING_PHASE","TRACE_INIT","i","idx","_this","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION","ACTION_RECORD","BACKTRACK","BACKTRACK_RECORD","LA","LA_RECORD","that","impl","grammarRule","args","howMuch","parser_1","def","newTopLevelRule","gast_1","definition","push","call","pop","originalError","KNOWN_RECORDER_ERROR","message","mutabilityError","actionORMethodDef","occurrence","recordProd","options","altsOrOpts","recordOrProd","ruleToCall","assertMethodIdxIsValid","error","Error","getIdxSuffix","JSON","stringify","prevProd","ruleName","newNoneTerminal","nonTerminalName","label","LABEL","referencedRule","undefined","outputCst","tokType","terminalType","exports","prodConstructor","mainProdArg","handleSep","grammarAction","DEF","newProd","separator","SEP","maxLookahead","MAX_LOOKAHEAD","hasOptions","alts","newOrProd","ignoreAmbiguities","IGNORE_AMBIGUITIES","hasPredicates","currAlt","GATE","currAltFlat","ALT"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/gast_recorder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}