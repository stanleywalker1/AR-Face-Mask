{"ast":null,"code":"var _jsxFileName = \"/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Suspense, useRef } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { FaceTracker, HeadMaskMesh, ZapparCamera, ZapparCanvas, Loader, Pipeline } from '@zappar/zappar-react-three-fiber';\nimport { useLoader } from '@react-three/fiber';\nimport helmetSrc from './assets/model.glb'; // function Model() {\n//   const [gltf, set] = useState<GLTF>();\n//   useMemo(() => new GLTFLoader().load(helmetSrc, set), []);\n//   if (gltf) {\n//     const { scene } = gltf;\n//     const Helmet = scene.getObjectByName('Helmet');\n//     return <primitive position={[0.25, -1.25, 0.1]} object={Helmet} />;\n//   }\n//   return null;\n// }\n// function Model() {\n//   const gltf = useLoader(GLTFLoader, helmetSrc)\n//   return <primitive position={[0.25, -1.25, 0.1]} object={gltf.nodes['Helmet']} />\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Model = () => {\n  _s();\n\n  const gltf = useLoader(GLTFLoader, helmetSrc);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Model, \"Gb9AtkFU6hmrh2vV1Bb0cKvd7W0=\", false, function () {\n  return [useLoader];\n});\n\n_c = Model;\n\nfunction App() {\n  _s2();\n\n  const faceTrackerGroup = useRef();\n  const pipeline = new Pipeline();\n  return /*#__PURE__*/_jsxDEV(ZapparCanvas, {\n    children: [/*#__PURE__*/_jsxDEV(ZapparCamera, {\n      pipeline: pipeline,\n      userFacing: true,\n      rearCameraMirrorMode: \"css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceTracker, {\n      ref: faceTrackerGroup,\n      pipeline: pipeline,\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(HeadMaskMesh, {\n          trackerGroup: faceTrackerGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [2.5, 8, 5],\n      intensity: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"rdXp/YHVGUX9h+p0TK+6TJQU19c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/src/App.tsx"],"names":["React","Suspense","useRef","GLTFLoader","FaceTracker","HeadMaskMesh","ZapparCamera","ZapparCanvas","Loader","Pipeline","useLoader","helmetSrc","Model","gltf","scene","App","faceTrackerGroup","pipeline"],"mappings":";;;;AAAA,OAAOA,KAAP,IACCC,QADD,EACoBC,MADpB,QAEO,OAFP;AAGA,SAAeC,UAAf,QAAiC,uCAAjC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAQO,kCARP;AASA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,IAAI,GAAGH,SAAS,CAACP,UAAD,EAAaQ,SAAb,CAAtB;AACA,sBAAO;AAAW,IAAA,MAAM,EAAEE,IAAI,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;GAAMF,K;UACSF,S;;;KADTE,K;;AAKN,SAASG,GAAT,GAAe;AAAA;;AACb,QAAMC,gBAAgB,GAAGd,MAAM,EAA/B;AACA,QAAMe,QAAQ,GAAG,IAAIR,QAAJ,EAAjB;AACA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEQ,QAAxB;AAAkC,MAAA,UAAU,MAA5C;AAA6C,MAAA,oBAAoB,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,GAAG,EAAED,gBAAlB;AAAoC,MAAA,QAAQ,EAAEC,QAA9C;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAc,MAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAkB,MAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAA5B;AAAyC,MAAA,SAAS,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;IAjBQD,G;;MAAAA,G;AAmBT,eAAeA,GAAf","sourcesContent":["import React, {\n Suspense, useMemo, useRef, useState,\n} from 'react';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport {\n  FaceTracker,\n  HeadMaskMesh,\n  ZapparCamera,\n  ZapparCanvas,\n  Loader,\n  Pipeline,\n  Types\n} from '@zappar/zappar-react-three-fiber';\nimport { useLoader } from '@react-three/fiber'\nimport helmetSrc from './assets/model.glb';\n\n// function Model() {\n//   const [gltf, set] = useState<GLTF>();\n//   useMemo(() => new GLTFLoader().load(helmetSrc, set), []);\n\n//   if (gltf) {\n//     const { scene } = gltf;\n//     const Helmet = scene.getObjectByName('Helmet');\n//     return <primitive position={[0.25, -1.25, 0.1]} object={Helmet} />;\n//   }\n//   return null;\n// }\n\n\n\n// function Model() {\n//   const gltf = useLoader(GLTFLoader, helmetSrc)\n//   return <primitive position={[0.25, -1.25, 0.1]} object={gltf.nodes['Helmet']} />\n// }\n\n\nconst Model = () => {\n  const gltf = useLoader(GLTFLoader, helmetSrc) as any ;\n  return <primitive object={gltf.scene} />;\n};\n\nfunction App() {\n  const faceTrackerGroup = useRef<Types.FaceAnchorGroup>();\n  const pipeline = new Pipeline();\n  return (\n    <ZapparCanvas>\n      <ZapparCamera pipeline={pipeline} userFacing rearCameraMirrorMode=\"css\" />\n      <FaceTracker ref={faceTrackerGroup} pipeline={pipeline}>\n        <Suspense fallback={null}>\n          <HeadMaskMesh trackerGroup={faceTrackerGroup} />\n          <Model />\n        </Suspense>\n      </FaceTracker>\n      <ambientLight intensity={0.6} />\n      <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n      <Loader />\n    </ZapparCanvas>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}