{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRuntimeObject = void 0;\n\nfunction getRuntimeObject(mod) {\n  let log_level_wrapped = mod.cwrap(\"zappar_log_level\", \"number\", []);\n  let log_level_set_wrapped = mod.cwrap(\"zappar_log_level_set\", null, [\"number\"]);\n  let analytics_project_id_set_wrapped = mod.cwrap(\"zappar_analytics_project_id_set\", null, [\"string\"]);\n  let pipeline_create_wrapped = mod.cwrap(\"zappar_pipeline_create\", \"number\", []);\n  let pipeline_destroy_wrapped = mod.cwrap(\"zappar_pipeline_destroy\", null, [\"number\"]);\n  let pipeline_frame_update_wrapped = mod.cwrap(\"zappar_pipeline_frame_update\", null, [\"number\"]);\n  let pipeline_frame_number_wrapped = mod.cwrap(\"zappar_pipeline_frame_number\", \"number\", [\"number\"]);\n  let pipeline_camera_model_wrapped = mod.cwrap(\"zappar_pipeline_camera_model\", \"number\", [\"number\"]);\n  let pipeline_camera_frame_user_data_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_user_data\", \"number\", [\"number\"]);\n  let pipeline_camera_frame_submit_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_submit\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\n  let pipeline_camera_frame_camera_attitude_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_camera_attitude\", \"number\", [\"number\"]);\n  let pipeline_motion_accelerometer_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_accelerometer_submit\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n  let pipeline_motion_rotation_rate_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_rotation_rate_submit\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n  let pipeline_motion_attitude_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_attitude_submit\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n  let camera_source_create_wrapped = mod.cwrap(\"zappar_camera_source_create\", \"number\", [\"number\", \"string\"]);\n  let camera_source_destroy_wrapped = mod.cwrap(\"zappar_camera_source_destroy\", null, [\"number\"]);\n  let image_tracker_create_wrapped = mod.cwrap(\"zappar_image_tracker_create\", \"number\", [\"number\"]);\n  let image_tracker_destroy_wrapped = mod.cwrap(\"zappar_image_tracker_destroy\", null, [\"number\"]);\n  let image_tracker_target_load_from_memory_wrapped = mod.cwrap(\"zappar_image_tracker_target_load_from_memory\", null, [\"number\", \"number\", \"number\"]);\n  let image_tracker_target_loaded_version_wrapped = mod.cwrap(\"zappar_image_tracker_target_loaded_version\", \"number\", [\"number\"]);\n  let image_tracker_target_count_wrapped = mod.cwrap(\"zappar_image_tracker_target_count\", \"number\", [\"number\"]);\n  let image_tracker_enabled_wrapped = mod.cwrap(\"zappar_image_tracker_enabled\", \"number\", [\"number\"]);\n  let image_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_image_tracker_enabled_set\", null, [\"number\", \"number\"]);\n  let image_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_count\", \"number\", [\"number\"]);\n  let image_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_id\", \"string\", [\"number\", \"number\"]);\n  let image_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_pose_raw\", \"number\", [\"number\", \"number\"]);\n  let face_tracker_create_wrapped = mod.cwrap(\"zappar_face_tracker_create\", \"number\", [\"number\"]);\n  let face_tracker_destroy_wrapped = mod.cwrap(\"zappar_face_tracker_destroy\", null, [\"number\"]);\n  let face_tracker_model_load_from_memory_wrapped = mod.cwrap(\"zappar_face_tracker_model_load_from_memory\", null, [\"number\", \"number\", \"number\"]);\n  let face_tracker_model_loaded_version_wrapped = mod.cwrap(\"zappar_face_tracker_model_loaded_version\", \"number\", [\"number\"]);\n  let face_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_face_tracker_enabled_set\", null, [\"number\", \"number\"]);\n  let face_tracker_enabled_wrapped = mod.cwrap(\"zappar_face_tracker_enabled\", \"number\", [\"number\"]);\n  let face_tracker_max_faces_set_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces_set\", null, [\"number\", \"number\"]);\n  let face_tracker_max_faces_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces\", \"number\", [\"number\"]);\n  let face_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_count\", \"number\", [\"number\"]);\n  let face_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_id\", \"string\", [\"number\", \"number\"]);\n  let face_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_pose_raw\", \"number\", [\"number\", \"number\"]);\n  let face_tracker_anchor_identity_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_identity_coefficients\", \"number\", [\"number\", \"number\"]);\n  let face_tracker_anchor_expression_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_expression_coefficients\", \"number\", [\"number\", \"number\"]);\n  let face_mesh_create_wrapped = mod.cwrap(\"zappar_face_mesh_create\", \"number\", []);\n  let face_mesh_destroy_wrapped = mod.cwrap(\"zappar_face_mesh_destroy\", null, [\"number\"]);\n  let face_landmark_create_wrapped = mod.cwrap(\"zappar_face_landmark_create\", \"number\", [\"number\"]);\n  let face_landmark_destroy_wrapped = mod.cwrap(\"zappar_face_landmark_destroy\", null, [\"number\"]);\n  let barcode_finder_create_wrapped = mod.cwrap(\"zappar_barcode_finder_create\", \"number\", [\"number\"]);\n  let barcode_finder_destroy_wrapped = mod.cwrap(\"zappar_barcode_finder_destroy\", null, [\"number\"]);\n  let barcode_finder_enabled_set_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled_set\", null, [\"number\", \"number\"]);\n  let barcode_finder_enabled_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled\", \"number\", [\"number\"]);\n  let barcode_finder_found_number_wrapped = mod.cwrap(\"zappar_barcode_finder_found_number\", \"number\", [\"number\"]);\n  let barcode_finder_found_text_wrapped = mod.cwrap(\"zappar_barcode_finder_found_text\", \"string\", [\"number\", \"number\"]);\n  let barcode_finder_found_format_wrapped = mod.cwrap(\"zappar_barcode_finder_found_format\", \"number\", [\"number\", \"number\"]);\n  let barcode_finder_formats_wrapped = mod.cwrap(\"zappar_barcode_finder_formats\", \"number\", [\"number\"]);\n  let barcode_finder_formats_set_wrapped = mod.cwrap(\"zappar_barcode_finder_formats_set\", null, [\"number\", \"number\"]);\n  let instant_world_tracker_create_wrapped = mod.cwrap(\"zappar_instant_world_tracker_create\", \"number\", [\"number\"]);\n  let instant_world_tracker_destroy_wrapped = mod.cwrap(\"zappar_instant_world_tracker_destroy\", null, [\"number\"]);\n  let instant_world_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled_set\", null, [\"number\", \"number\"]);\n  let instant_world_tracker_enabled_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled\", \"number\", [\"number\"]);\n  let instant_world_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_raw\", \"number\", [\"number\"]);\n  let instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_set_from_camera_offset\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\n  let dataArrayArgLength = 32;\n\n  let dataArrayArg = mod._malloc(dataArrayArgLength);\n\n  let floatDataArrayArgLength = 16 * 4;\n\n  let floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n\n  return {\n    log_level: () => {\n      let ret = log_level_wrapped();\n      return ret;\n    },\n    log_level_set: level => {\n      let arg_level = level;\n      let ret = log_level_set_wrapped(arg_level);\n      return ret;\n    },\n    analytics_project_id_set: id => {\n      let arg_id = id;\n      let ret = analytics_project_id_set_wrapped(arg_id);\n      return ret;\n    },\n    pipeline_create: () => {\n      return pipeline_create_wrapped();\n    },\n    pipeline_destroy: () => {\n      pipeline_destroy_wrapped();\n    },\n    pipeline_frame_update: o => {\n      let ret = pipeline_frame_update_wrapped(o);\n      return ret;\n    },\n    pipeline_frame_number: o => {\n      let ret = pipeline_frame_number_wrapped(o);\n      return ret;\n    },\n    pipeline_camera_model: o => {\n      let ret = pipeline_camera_model_wrapped(o);\n      let ab = new Float32Array(6);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 6 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    pipeline_camera_frame_user_data: o => {\n      let ret = pipeline_camera_frame_user_data_wrapped(o);\n      return ret;\n    },\n    pipeline_camera_frame_submit: (o, data, width, height, user_data, camera_to_device_transform) => {\n      if (dataArrayArgLength < data.byteLength) {\n        mod._free(dataArrayArg);\n\n        dataArrayArgLength = data.byteLength;\n        dataArrayArg = mod._malloc(dataArrayArgLength);\n      }\n\n      let arg_data = dataArrayArg;\n      let arg_len_data = data.byteLength;\n      mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n      let arg_width = width;\n      let arg_height = height;\n      let arg_user_data = user_data;\n\n      if (floatDataArrayArgLength < camera_to_device_transform.byteLength) {\n        mod._free(floatDataArrayArgLength);\n\n        floatDataArrayArgLength = camera_to_device_transform.byteLength;\n        floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n      }\n\n      let arg_camera_to_device_transform = floatDataArrayArg;\n      mod.HEAPF32.set(camera_to_device_transform, floatDataArrayArg / 4);\n      let ret = pipeline_camera_frame_submit_wrapped(o, arg_data, arg_len_data, arg_width, arg_height, arg_user_data, arg_camera_to_device_transform);\n      return ret;\n    },\n    pipeline_camera_frame_camera_attitude: o => {\n      let ret = pipeline_camera_frame_camera_attitude_wrapped(o);\n      let ab = new Float32Array(16);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    pipeline_motion_accelerometer_submit: (o, time, x, y, z) => {\n      let arg_time = time;\n      let arg_x = x;\n      let arg_y = y;\n      let arg_z = z;\n      let ret = pipeline_motion_accelerometer_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n      return ret;\n    },\n    pipeline_motion_rotation_rate_submit: (o, time, x, y, z) => {\n      let arg_time = time;\n      let arg_x = x;\n      let arg_y = y;\n      let arg_z = z;\n      let ret = pipeline_motion_rotation_rate_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n      return ret;\n    },\n    pipeline_motion_attitude_submit: (o, time, x, y, z) => {\n      let arg_time = time;\n      let arg_x = x;\n      let arg_y = y;\n      let arg_z = z;\n      let ret = pipeline_motion_attitude_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n      return ret;\n    },\n    camera_source_create: (pipeline, device_id) => {\n      let arg_pipeline = pipeline;\n      let arg_device_id = device_id;\n      return camera_source_create_wrapped(arg_pipeline, arg_device_id);\n    },\n    camera_source_destroy: () => {\n      camera_source_destroy_wrapped();\n    },\n    image_tracker_create: pipeline => {\n      let arg_pipeline = pipeline;\n      return image_tracker_create_wrapped(arg_pipeline);\n    },\n    image_tracker_destroy: () => {\n      image_tracker_destroy_wrapped();\n    },\n    image_tracker_target_load_from_memory: (o, data) => {\n      if (dataArrayArgLength < data.byteLength) {\n        mod._free(dataArrayArg);\n\n        dataArrayArgLength = data.byteLength;\n        dataArrayArg = mod._malloc(dataArrayArgLength);\n      }\n\n      let arg_data = dataArrayArg;\n      let arg_len_data = data.byteLength;\n      mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n      let ret = image_tracker_target_load_from_memory_wrapped(o, arg_data, arg_len_data);\n      return ret;\n    },\n    image_tracker_target_loaded_version: o => {\n      let ret = image_tracker_target_loaded_version_wrapped(o);\n      return ret;\n    },\n    image_tracker_target_count: o => {\n      let ret = image_tracker_target_count_wrapped(o);\n      return ret;\n    },\n    image_tracker_enabled: o => {\n      let ret = image_tracker_enabled_wrapped(o);\n      ret = ret === 1;\n      return ret;\n    },\n    image_tracker_enabled_set: (o, enabled) => {\n      let arg_enabled = enabled ? 1 : 0;\n      let ret = image_tracker_enabled_set_wrapped(o, arg_enabled);\n      return ret;\n    },\n    image_tracker_anchor_count: o => {\n      let ret = image_tracker_anchor_count_wrapped(o);\n      return ret;\n    },\n    image_tracker_anchor_id: (o, indx) => {\n      let arg_indx = indx;\n      let ret = image_tracker_anchor_id_wrapped(o, arg_indx);\n      return ret;\n    },\n    image_tracker_anchor_pose_raw: (o, indx) => {\n      let arg_indx = indx;\n      let ret = image_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n      let ab = new Float32Array(16);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    face_tracker_create: pipeline => {\n      let arg_pipeline = pipeline;\n      return face_tracker_create_wrapped(arg_pipeline);\n    },\n    face_tracker_destroy: () => {\n      face_tracker_destroy_wrapped();\n    },\n    face_tracker_model_load_from_memory: (o, data) => {\n      if (dataArrayArgLength < data.byteLength) {\n        mod._free(dataArrayArg);\n\n        dataArrayArgLength = data.byteLength;\n        dataArrayArg = mod._malloc(dataArrayArgLength);\n      }\n\n      let arg_data = dataArrayArg;\n      let arg_len_data = data.byteLength;\n      mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n      let ret = face_tracker_model_load_from_memory_wrapped(o, arg_data, arg_len_data);\n      return ret;\n    },\n    face_tracker_model_loaded_version: o => {\n      let ret = face_tracker_model_loaded_version_wrapped(o);\n      return ret;\n    },\n    face_tracker_enabled_set: (o, enabled) => {\n      let arg_enabled = enabled ? 1 : 0;\n      let ret = face_tracker_enabled_set_wrapped(o, arg_enabled);\n      return ret;\n    },\n    face_tracker_enabled: o => {\n      let ret = face_tracker_enabled_wrapped(o);\n      ret = ret === 1;\n      return ret;\n    },\n    face_tracker_max_faces_set: (o, num) => {\n      let arg_num = num;\n      let ret = face_tracker_max_faces_set_wrapped(o, arg_num);\n      return ret;\n    },\n    face_tracker_max_faces: o => {\n      let ret = face_tracker_max_faces_wrapped(o);\n      return ret;\n    },\n    face_tracker_anchor_count: o => {\n      let ret = face_tracker_anchor_count_wrapped(o);\n      return ret;\n    },\n    face_tracker_anchor_id: (o, indx) => {\n      let arg_indx = indx;\n      let ret = face_tracker_anchor_id_wrapped(o, arg_indx);\n      return ret;\n    },\n    face_tracker_anchor_pose_raw: (o, indx) => {\n      let arg_indx = indx;\n      let ret = face_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n      let ab = new Float32Array(16);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    face_tracker_anchor_identity_coefficients: (o, indx) => {\n      let arg_indx = indx;\n      let ret = face_tracker_anchor_identity_coefficients_wrapped(o, arg_indx);\n      let ab = new Float32Array(50);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 50 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    face_tracker_anchor_expression_coefficients: (o, indx) => {\n      let arg_indx = indx;\n      let ret = face_tracker_anchor_expression_coefficients_wrapped(o, arg_indx);\n      let ab = new Float32Array(29);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 29 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    face_mesh_create: () => {\n      return face_mesh_create_wrapped();\n    },\n    face_mesh_destroy: () => {\n      face_mesh_destroy_wrapped();\n    },\n    face_landmark_create: landmark => {\n      let arg_landmark = landmark;\n      return face_landmark_create_wrapped(arg_landmark);\n    },\n    face_landmark_destroy: () => {\n      face_landmark_destroy_wrapped();\n    },\n    barcode_finder_create: pipeline => {\n      let arg_pipeline = pipeline;\n      return barcode_finder_create_wrapped(arg_pipeline);\n    },\n    barcode_finder_destroy: () => {\n      barcode_finder_destroy_wrapped();\n    },\n    barcode_finder_enabled_set: (o, enabled) => {\n      let arg_enabled = enabled ? 1 : 0;\n      let ret = barcode_finder_enabled_set_wrapped(o, arg_enabled);\n      return ret;\n    },\n    barcode_finder_enabled: o => {\n      let ret = barcode_finder_enabled_wrapped(o);\n      ret = ret === 1;\n      return ret;\n    },\n    barcode_finder_found_number: o => {\n      let ret = barcode_finder_found_number_wrapped(o);\n      return ret;\n    },\n    barcode_finder_found_text: (o, indx) => {\n      let arg_indx = indx;\n      let ret = barcode_finder_found_text_wrapped(o, arg_indx);\n      return ret;\n    },\n    barcode_finder_found_format: (o, indx) => {\n      let arg_indx = indx;\n      let ret = barcode_finder_found_format_wrapped(o, arg_indx);\n      return ret;\n    },\n    barcode_finder_formats: o => {\n      let ret = barcode_finder_formats_wrapped(o);\n      return ret;\n    },\n    barcode_finder_formats_set: (o, f) => {\n      let arg_f = f;\n      let ret = barcode_finder_formats_set_wrapped(o, arg_f);\n      return ret;\n    },\n    instant_world_tracker_create: pipeline => {\n      let arg_pipeline = pipeline;\n      return instant_world_tracker_create_wrapped(arg_pipeline);\n    },\n    instant_world_tracker_destroy: () => {\n      instant_world_tracker_destroy_wrapped();\n    },\n    instant_world_tracker_enabled_set: (o, enabled) => {\n      let arg_enabled = enabled ? 1 : 0;\n      let ret = instant_world_tracker_enabled_set_wrapped(o, arg_enabled);\n      return ret;\n    },\n    instant_world_tracker_enabled: o => {\n      let ret = instant_world_tracker_enabled_wrapped(o);\n      ret = ret === 1;\n      return ret;\n    },\n    instant_world_tracker_anchor_pose_raw: o => {\n      let ret = instant_world_tracker_anchor_pose_raw_wrapped(o);\n      let ab = new Float32Array(16);\n      ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n      ret = ab;\n      return ret;\n    },\n    instant_world_tracker_anchor_pose_set_from_camera_offset: (o, x, y, z, orientation) => {\n      let arg_x = x;\n      let arg_y = y;\n      let arg_z = z;\n      let arg_orientation = orientation;\n      let ret = instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped(o, arg_x, arg_y, arg_z, arg_orientation);\n      return ret;\n    }\n  };\n}\n\nexports.getRuntimeObject = getRuntimeObject;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/face-mask-demo/AR-Face-Mask/node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js"],"names":["Object","defineProperty","exports","value","getRuntimeObject","mod","log_level_wrapped","cwrap","log_level_set_wrapped","analytics_project_id_set_wrapped","pipeline_create_wrapped","pipeline_destroy_wrapped","pipeline_frame_update_wrapped","pipeline_frame_number_wrapped","pipeline_camera_model_wrapped","pipeline_camera_frame_user_data_wrapped","pipeline_camera_frame_submit_wrapped","pipeline_camera_frame_camera_attitude_wrapped","pipeline_motion_accelerometer_submit_wrapped","pipeline_motion_rotation_rate_submit_wrapped","pipeline_motion_attitude_submit_wrapped","camera_source_create_wrapped","camera_source_destroy_wrapped","image_tracker_create_wrapped","image_tracker_destroy_wrapped","image_tracker_target_load_from_memory_wrapped","image_tracker_target_loaded_version_wrapped","image_tracker_target_count_wrapped","image_tracker_enabled_wrapped","image_tracker_enabled_set_wrapped","image_tracker_anchor_count_wrapped","image_tracker_anchor_id_wrapped","image_tracker_anchor_pose_raw_wrapped","face_tracker_create_wrapped","face_tracker_destroy_wrapped","face_tracker_model_load_from_memory_wrapped","face_tracker_model_loaded_version_wrapped","face_tracker_enabled_set_wrapped","face_tracker_enabled_wrapped","face_tracker_max_faces_set_wrapped","face_tracker_max_faces_wrapped","face_tracker_anchor_count_wrapped","face_tracker_anchor_id_wrapped","face_tracker_anchor_pose_raw_wrapped","face_tracker_anchor_identity_coefficients_wrapped","face_tracker_anchor_expression_coefficients_wrapped","face_mesh_create_wrapped","face_mesh_destroy_wrapped","face_landmark_create_wrapped","face_landmark_destroy_wrapped","barcode_finder_create_wrapped","barcode_finder_destroy_wrapped","barcode_finder_enabled_set_wrapped","barcode_finder_enabled_wrapped","barcode_finder_found_number_wrapped","barcode_finder_found_text_wrapped","barcode_finder_found_format_wrapped","barcode_finder_formats_wrapped","barcode_finder_formats_set_wrapped","instant_world_tracker_create_wrapped","instant_world_tracker_destroy_wrapped","instant_world_tracker_enabled_set_wrapped","instant_world_tracker_enabled_wrapped","instant_world_tracker_anchor_pose_raw_wrapped","instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped","dataArrayArgLength","dataArrayArg","_malloc","floatDataArrayArgLength","floatDataArrayArg","log_level","ret","log_level_set","level","arg_level","analytics_project_id_set","id","arg_id","pipeline_create","pipeline_destroy","pipeline_frame_update","o","pipeline_frame_number","pipeline_camera_model","ab","Float32Array","set","HEAPF32","subarray","pipeline_camera_frame_user_data","pipeline_camera_frame_submit","data","width","height","user_data","camera_to_device_transform","byteLength","_free","arg_data","arg_len_data","HEAPU8","Uint8Array","arg_width","arg_height","arg_user_data","arg_camera_to_device_transform","pipeline_camera_frame_camera_attitude","pipeline_motion_accelerometer_submit","time","x","y","z","arg_time","arg_x","arg_y","arg_z","pipeline_motion_rotation_rate_submit","pipeline_motion_attitude_submit","camera_source_create","pipeline","device_id","arg_pipeline","arg_device_id","camera_source_destroy","image_tracker_create","image_tracker_destroy","image_tracker_target_load_from_memory","image_tracker_target_loaded_version","image_tracker_target_count","image_tracker_enabled","image_tracker_enabled_set","enabled","arg_enabled","image_tracker_anchor_count","image_tracker_anchor_id","indx","arg_indx","image_tracker_anchor_pose_raw","face_tracker_create","face_tracker_destroy","face_tracker_model_load_from_memory","face_tracker_model_loaded_version","face_tracker_enabled_set","face_tracker_enabled","face_tracker_max_faces_set","num","arg_num","face_tracker_max_faces","face_tracker_anchor_count","face_tracker_anchor_id","face_tracker_anchor_pose_raw","face_tracker_anchor_identity_coefficients","face_tracker_anchor_expression_coefficients","face_mesh_create","face_mesh_destroy","face_landmark_create","landmark","arg_landmark","face_landmark_destroy","barcode_finder_create","barcode_finder_destroy","barcode_finder_enabled_set","barcode_finder_enabled","barcode_finder_found_number","barcode_finder_found_text","barcode_finder_found_format","barcode_finder_formats","barcode_finder_formats_set","f","arg_f","instant_world_tracker_create","instant_world_tracker_destroy","instant_world_tracker_enabled_set","instant_world_tracker_enabled","instant_world_tracker_anchor_pose_raw","instant_world_tracker_anchor_pose_set_from_camera_offset","orientation","arg_orientation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeObject = void 0;\nfunction getRuntimeObject(mod) {\n    let log_level_wrapped = mod.cwrap(\"zappar_log_level\", \"number\", []);\n    let log_level_set_wrapped = mod.cwrap(\"zappar_log_level_set\", null, [\n        \"number\"\n    ]);\n    let analytics_project_id_set_wrapped = mod.cwrap(\"zappar_analytics_project_id_set\", null, [\n        \"string\"\n    ]);\n    let pipeline_create_wrapped = mod.cwrap(\"zappar_pipeline_create\", \"number\", []);\n    let pipeline_destroy_wrapped = mod.cwrap(\"zappar_pipeline_destroy\", null, [\"number\"]);\n    let pipeline_frame_update_wrapped = mod.cwrap(\"zappar_pipeline_frame_update\", null, [\n        \"number\"\n    ]);\n    let pipeline_frame_number_wrapped = mod.cwrap(\"zappar_pipeline_frame_number\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_model_wrapped = mod.cwrap(\"zappar_pipeline_camera_model\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_user_data_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_user_data\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_submit_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_camera_frame_camera_attitude_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_camera_attitude\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_motion_accelerometer_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_accelerometer_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_rotation_rate_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_rotation_rate_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_attitude_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_attitude_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let camera_source_create_wrapped = mod.cwrap(\"zappar_camera_source_create\", \"number\", [\"number\", \"string\"]);\n    let camera_source_destroy_wrapped = mod.cwrap(\"zappar_camera_source_destroy\", null, [\"number\"]);\n    let image_tracker_create_wrapped = mod.cwrap(\"zappar_image_tracker_create\", \"number\", [\"number\"]);\n    let image_tracker_destroy_wrapped = mod.cwrap(\"zappar_image_tracker_destroy\", null, [\"number\"]);\n    let image_tracker_target_load_from_memory_wrapped = mod.cwrap(\"zappar_image_tracker_target_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let image_tracker_target_loaded_version_wrapped = mod.cwrap(\"zappar_image_tracker_target_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_target_count_wrapped = mod.cwrap(\"zappar_image_tracker_target_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_wrapped = mod.cwrap(\"zappar_image_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_image_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_create_wrapped = mod.cwrap(\"zappar_face_tracker_create\", \"number\", [\"number\"]);\n    let face_tracker_destroy_wrapped = mod.cwrap(\"zappar_face_tracker_destroy\", null, [\"number\"]);\n    let face_tracker_model_load_from_memory_wrapped = mod.cwrap(\"zappar_face_tracker_model_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let face_tracker_model_loaded_version_wrapped = mod.cwrap(\"zappar_face_tracker_model_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_face_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_enabled_wrapped = mod.cwrap(\"zappar_face_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_max_faces_set_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_max_faces_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_identity_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_identity_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_expression_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_expression_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_mesh_create_wrapped = mod.cwrap(\"zappar_face_mesh_create\", \"number\", []);\n    let face_mesh_destroy_wrapped = mod.cwrap(\"zappar_face_mesh_destroy\", null, [\"number\"]);\n    let face_landmark_create_wrapped = mod.cwrap(\"zappar_face_landmark_create\", \"number\", [\"number\"]);\n    let face_landmark_destroy_wrapped = mod.cwrap(\"zappar_face_landmark_destroy\", null, [\"number\"]);\n    let barcode_finder_create_wrapped = mod.cwrap(\"zappar_barcode_finder_create\", \"number\", [\"number\"]);\n    let barcode_finder_destroy_wrapped = mod.cwrap(\"zappar_barcode_finder_destroy\", null, [\"number\"]);\n    let barcode_finder_enabled_set_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_enabled_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_number_wrapped = mod.cwrap(\"zappar_barcode_finder_found_number\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_text_wrapped = mod.cwrap(\"zappar_barcode_finder_found_text\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_found_format_wrapped = mod.cwrap(\"zappar_barcode_finder_found_format\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_formats_wrapped = mod.cwrap(\"zappar_barcode_finder_formats\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_formats_set_wrapped = mod.cwrap(\"zappar_barcode_finder_formats_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_create_wrapped = mod.cwrap(\"zappar_instant_world_tracker_create\", \"number\", [\"number\"]);\n    let instant_world_tracker_destroy_wrapped = mod.cwrap(\"zappar_instant_world_tracker_destroy\", null, [\"number\"]);\n    let instant_world_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_enabled_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_raw\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_set_from_camera_offset\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let dataArrayArgLength = 32;\n    let dataArrayArg = mod._malloc(dataArrayArgLength);\n    let floatDataArrayArgLength = 16 * 4;\n    let floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n    return {\n        log_level: () => {\n            let ret = log_level_wrapped();\n            return ret;\n        },\n        log_level_set: (level) => {\n            let arg_level = level;\n            let ret = log_level_set_wrapped(arg_level);\n            return ret;\n        },\n        analytics_project_id_set: (id) => {\n            let arg_id = id;\n            let ret = analytics_project_id_set_wrapped(arg_id);\n            return ret;\n        },\n        pipeline_create: () => {\n            return pipeline_create_wrapped();\n        },\n        pipeline_destroy: () => {\n            pipeline_destroy_wrapped();\n        },\n        pipeline_frame_update: (o) => {\n            let ret = pipeline_frame_update_wrapped(o);\n            return ret;\n        },\n        pipeline_frame_number: (o) => {\n            let ret = pipeline_frame_number_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_model: (o) => {\n            let ret = pipeline_camera_model_wrapped(o);\n            let ab = new Float32Array(6);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 6 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_camera_frame_user_data: (o) => {\n            let ret = pipeline_camera_frame_user_data_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_frame_submit: (o, data, width, height, user_data, camera_to_device_transform) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let arg_width = width;\n            let arg_height = height;\n            let arg_user_data = user_data;\n            if (floatDataArrayArgLength < camera_to_device_transform.byteLength) {\n                mod._free(floatDataArrayArgLength);\n                floatDataArrayArgLength = camera_to_device_transform.byteLength;\n                floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n            }\n            let arg_camera_to_device_transform = floatDataArrayArg;\n            mod.HEAPF32.set(camera_to_device_transform, floatDataArrayArg / 4);\n            let ret = pipeline_camera_frame_submit_wrapped(o, arg_data, arg_len_data, arg_width, arg_height, arg_user_data, arg_camera_to_device_transform);\n            return ret;\n        },\n        pipeline_camera_frame_camera_attitude: (o) => {\n            let ret = pipeline_camera_frame_camera_attitude_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_motion_accelerometer_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_accelerometer_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_rotation_rate_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_rotation_rate_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_attitude_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_attitude_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        camera_source_create: (pipeline, device_id) => {\n            let arg_pipeline = pipeline;\n            let arg_device_id = device_id;\n            return camera_source_create_wrapped(arg_pipeline, arg_device_id);\n        },\n        camera_source_destroy: () => {\n            camera_source_destroy_wrapped();\n        },\n        image_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return image_tracker_create_wrapped(arg_pipeline);\n        },\n        image_tracker_destroy: () => {\n            image_tracker_destroy_wrapped();\n        },\n        image_tracker_target_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = image_tracker_target_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        image_tracker_target_loaded_version: (o) => {\n            let ret = image_tracker_target_loaded_version_wrapped(o);\n            return ret;\n        },\n        image_tracker_target_count: (o) => {\n            let ret = image_tracker_target_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_enabled: (o) => {\n            let ret = image_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        image_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = image_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        image_tracker_anchor_count: (o) => {\n            let ret = image_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        image_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return face_tracker_create_wrapped(arg_pipeline);\n        },\n        face_tracker_destroy: () => {\n            face_tracker_destroy_wrapped();\n        },\n        face_tracker_model_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = face_tracker_model_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        face_tracker_model_loaded_version: (o) => {\n            let ret = face_tracker_model_loaded_version_wrapped(o);\n            return ret;\n        },\n        face_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = face_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        face_tracker_enabled: (o) => {\n            let ret = face_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        face_tracker_max_faces_set: (o, num) => {\n            let arg_num = num;\n            let ret = face_tracker_max_faces_set_wrapped(o, arg_num);\n            return ret;\n        },\n        face_tracker_max_faces: (o) => {\n            let ret = face_tracker_max_faces_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_count: (o) => {\n            let ret = face_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        face_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_identity_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_identity_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(50);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 50 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_expression_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_expression_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(29);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 29 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_mesh_create: () => {\n            return face_mesh_create_wrapped();\n        },\n        face_mesh_destroy: () => {\n            face_mesh_destroy_wrapped();\n        },\n        face_landmark_create: (landmark) => {\n            let arg_landmark = landmark;\n            return face_landmark_create_wrapped(arg_landmark);\n        },\n        face_landmark_destroy: () => {\n            face_landmark_destroy_wrapped();\n        },\n        barcode_finder_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return barcode_finder_create_wrapped(arg_pipeline);\n        },\n        barcode_finder_destroy: () => {\n            barcode_finder_destroy_wrapped();\n        },\n        barcode_finder_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = barcode_finder_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        barcode_finder_enabled: (o) => {\n            let ret = barcode_finder_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        barcode_finder_found_number: (o) => {\n            let ret = barcode_finder_found_number_wrapped(o);\n            return ret;\n        },\n        barcode_finder_found_text: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_text_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_found_format: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_format_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_formats: (o) => {\n            let ret = barcode_finder_formats_wrapped(o);\n            return ret;\n        },\n        barcode_finder_formats_set: (o, f) => {\n            let arg_f = f;\n            let ret = barcode_finder_formats_set_wrapped(o, arg_f);\n            return ret;\n        },\n        instant_world_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return instant_world_tracker_create_wrapped(arg_pipeline);\n        },\n        instant_world_tracker_destroy: () => {\n            instant_world_tracker_destroy_wrapped();\n        },\n        instant_world_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = instant_world_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        instant_world_tracker_enabled: (o) => {\n            let ret = instant_world_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_raw: (o) => {\n            let ret = instant_world_tracker_anchor_pose_raw_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_set_from_camera_offset: (o, x, y, z, orientation) => {\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let arg_orientation = orientation;\n            let ret = instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped(o, arg_x, arg_y, arg_z, arg_orientation);\n            return ret;\n        },\n    };\n}\nexports.getRuntimeObject = getRuntimeObject;\n"]},"metadata":{},"sourceType":"script"}