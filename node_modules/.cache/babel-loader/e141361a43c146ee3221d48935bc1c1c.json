{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst worker_server_1 = require(\"./worker-server\");\n\nconst ctx = self;\nworker_server_1.messageManager.onOutgoingMessage.bind(() => {\n  let msgs = worker_server_1.messageManager.getOutgoingMessages();\n\n  for (let msg of msgs) {\n    ctx.postMessage(msg.msg, msg.transferables);\n  }\n});\n\nlet launchHandler = evt => {\n  if (evt && evt.data && evt.data.t === \"wasm\") {\n    let url = location.href.startsWith(\"blob\") ? evt.data.url : require(\"./zcv.wasm\");\n    if (url.default) url = url.default;\n    worker_server_1.launchWorkerServer(url);\n    ctx.removeEventListener(\"message\", launchHandler);\n  }\n};\n\nctx.addEventListener(\"message\", launchHandler);\nctx.addEventListener(\"message\", evt => {\n  worker_server_1.messageManager.postIncomingMessage(evt.data);\n});","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-cv/lib/worker.js"],"names":["Object","defineProperty","exports","value","worker_server_1","require","ctx","self","messageManager","onOutgoingMessage","bind","msgs","getOutgoingMessages","msg","postMessage","transferables","launchHandler","evt","data","t","url","location","href","startsWith","default","launchWorkerServer","removeEventListener","addEventListener","postIncomingMessage"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAMC,GAAG,GAAGC,IAAZ;AACAH,eAAe,CAACI,cAAhB,CAA+BC,iBAA/B,CAAiDC,IAAjD,CAAsD,MAAM;AACxD,MAAIC,IAAI,GAAGP,eAAe,CAACI,cAAhB,CAA+BI,mBAA/B,EAAX;;AACA,OAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AAClBL,IAAAA,GAAG,CAACQ,WAAJ,CAAgBD,GAAG,CAACA,GAApB,EAAyBA,GAAG,CAACE,aAA7B;AACH;AACJ,CALD;;AAMA,IAAIC,aAAa,GAAIC,GAAD,IAAS;AACzB,MAAIA,GAAG,IAAIA,GAAG,CAACC,IAAX,IAAmBD,GAAG,CAACC,IAAJ,CAASC,CAAT,KAAe,MAAtC,EAA8C;AAC1C,QAAIC,GAAG,GAAGC,QAAQ,CAACC,IAAT,CAAcC,UAAd,CAAyB,MAAzB,IAAmCN,GAAG,CAACC,IAAJ,CAASE,GAA5C,GAAkDf,OAAO,CAAC,YAAD,CAAnE;AACA,QAAIe,GAAG,CAACI,OAAR,EACIJ,GAAG,GAAGA,GAAG,CAACI,OAAV;AACJpB,IAAAA,eAAe,CAACqB,kBAAhB,CAAmCL,GAAnC;AACAd,IAAAA,GAAG,CAACoB,mBAAJ,CAAwB,SAAxB,EAAmCV,aAAnC;AACH;AACJ,CARD;;AASAV,GAAG,CAACqB,gBAAJ,CAAqB,SAArB,EAAgCX,aAAhC;AACAV,GAAG,CAACqB,gBAAJ,CAAqB,SAArB,EAAgCV,GAAG,IAAI;AACnCb,EAAAA,eAAe,CAACI,cAAhB,CAA+BoB,mBAA/B,CAAmDX,GAAG,CAACC,IAAvD;AACH,CAFD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst worker_server_1 = require(\"./worker-server\");\nconst ctx = self;\nworker_server_1.messageManager.onOutgoingMessage.bind(() => {\n    let msgs = worker_server_1.messageManager.getOutgoingMessages();\n    for (let msg of msgs) {\n        ctx.postMessage(msg.msg, msg.transferables);\n    }\n});\nlet launchHandler = (evt) => {\n    if (evt && evt.data && evt.data.t === \"wasm\") {\n        let url = location.href.startsWith(\"blob\") ? evt.data.url : require(\"./zcv.wasm\");\n        if (url.default)\n            url = url.default;\n        worker_server_1.launchWorkerServer(url);\n        ctx.removeEventListener(\"message\", launchHandler);\n    }\n};\nctx.addEventListener(\"message\", launchHandler);\nctx.addEventListener(\"message\", evt => {\n    worker_server_1.messageManager.postIncomingMessage(evt.data);\n});\n"]},"metadata":{},"sourceType":"script"}