{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageTrackerLoader = void 0;\n/* eslint-disable class-methods-use-this */\n\nconst three_1 = require(\"../three\");\n\nconst defaultpipeline_1 = require(\"../defaultpipeline\");\n/**\n * Loader for image trackers.\n * @see https://docs.zap.works/universal-ar/web-libraries/threejs/image-tracking/\n */\n\n\nclass ImageTrackerLoader extends three_1.THREE.Loader {\n  /**\n   * Loads an image tracker.\n   * @param zpt - A URL to, or ArrayBuffer of, an image target file.\n   * @param onLoad - Callback which returns the imageTracker once it's loaded.\n   * @param onError - Callback which is called if there's an error loading the target file.\n   * @returns The ImageTracker.\n   * @see https://docs.zap.works/universal-ar/zapworks-cli/\n   */\n  load(zpt, onLoad, onProgress, onError) {\n    const trk = new defaultpipeline_1.ImageTracker();\n    trk.loadTarget(zpt).then(() => {\n      onLoad === null || onLoad === void 0 ? void 0 : onLoad(trk);\n      this.manager.itemEnd(zpt);\n    }).catch(_ => {\n      onError === null || onError === void 0 ? void 0 : onError(_);\n      this.manager.itemError(zpt);\n      this.manager.itemEnd(zpt);\n    });\n    return trk;\n  }\n  /**\n   * @ignore\n   */\n\n\n  parse() {}\n\n}\n\nexports.ImageTrackerLoader = ImageTrackerLoader;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-threejs/lib/loaders/imagetrackerloader.js"],"names":["Object","defineProperty","exports","value","ImageTrackerLoader","three_1","require","defaultpipeline_1","THREE","Loader","load","zpt","onLoad","onProgress","onError","trk","ImageTracker","loadTarget","then","manager","itemEnd","catch","_","itemError","parse"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;AACA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,oBAAD,CAAjC;AACA;AACA;AACA;AACA;;;AACA,MAAMF,kBAAN,SAAiCC,OAAO,CAACG,KAAR,CAAcC,MAA/C,CAAsD;AAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,IAAI,CAACC,GAAD,EAAMC,MAAN,EAAcC,UAAd,EAA0BC,OAA1B,EAAmC;AACnC,UAAMC,GAAG,GAAG,IAAIR,iBAAiB,CAACS,YAAtB,EAAZ;AACAD,IAAAA,GAAG,CACEE,UADL,CACgBN,GADhB,EAEKO,IAFL,CAEU,MAAM;AACZN,MAAAA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACG,GAAD,CAAtD;AACA,WAAKI,OAAL,CAAaC,OAAb,CAAqBT,GAArB;AACH,KALD,EAMKU,KANL,CAMYC,CAAD,IAAO;AACdR,MAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACQ,CAAD,CAAzD;AACA,WAAKH,OAAL,CAAaI,SAAb,CAAuBZ,GAAvB;AACA,WAAKQ,OAAL,CAAaC,OAAb,CAAqBT,GAArB;AACH,KAVD;AAWA,WAAOI,GAAP;AACH;AACD;AACJ;AACA;;;AACIS,EAAAA,KAAK,GAAG,CAAG;;AA3BuC;;AA6BtDtB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageTrackerLoader = void 0;\n/* eslint-disable class-methods-use-this */\nconst three_1 = require(\"../three\");\nconst defaultpipeline_1 = require(\"../defaultpipeline\");\n/**\n * Loader for image trackers.\n * @see https://docs.zap.works/universal-ar/web-libraries/threejs/image-tracking/\n */\nclass ImageTrackerLoader extends three_1.THREE.Loader {\n    /**\n     * Loads an image tracker.\n     * @param zpt - A URL to, or ArrayBuffer of, an image target file.\n     * @param onLoad - Callback which returns the imageTracker once it's loaded.\n     * @param onError - Callback which is called if there's an error loading the target file.\n     * @returns The ImageTracker.\n     * @see https://docs.zap.works/universal-ar/zapworks-cli/\n     */\n    load(zpt, onLoad, onProgress, onError) {\n        const trk = new defaultpipeline_1.ImageTracker();\n        trk\n            .loadTarget(zpt)\n            .then(() => {\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad(trk);\n            this.manager.itemEnd(zpt);\n        })\n            .catch((_) => {\n            onError === null || onError === void 0 ? void 0 : onError(_);\n            this.manager.itemError(zpt);\n            this.manager.itemEnd(zpt);\n        });\n        return trk;\n    }\n    /**\n     * @ignore\n     */\n    parse() { }\n}\nexports.ImageTrackerLoader = ImageTrackerLoader;\n"]},"metadata":{},"sourceType":"script"}