{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageDeserializer = void 0;\n\nclass MessageDeserializer {\n  constructor() {\n    this._buffer = new ArrayBuffer(0);\n    this._i32View = new Int32Array(this._buffer);\n    this._f32View = new Float32Array(this._buffer);\n    this._f64View = new Float64Array(this._buffer);\n    this._u8View = new Uint8Array(this._buffer);\n    this._u16View = new Uint16Array(this._buffer);\n    this._u32View = new Uint32Array(this._buffer);\n    this._offset = 0;\n    this._length = 0;\n    this._startOffset = -1;\n    this._processor = {\n      int: () => this._i32View[this._startOffset++],\n      bool: () => this._i32View[this._startOffset++] === 1,\n      type: () => this._i32View[this._startOffset++],\n      float: () => this._f32View[this._startOffset++],\n      timestamp: () => {\n        if (this._startOffset % 2 === 1) this._startOffset++;\n        let ret = this._f64View[this._startOffset / 2];\n        this._startOffset += 2;\n        return ret;\n      },\n      string: () => {\n        let len = this._i32View[this._startOffset++];\n        let decoder = new TextDecoder();\n        let res = decoder.decode(new Uint8Array(this._buffer, this._startOffset * 4, len));\n        this._startOffset += len >> 2;\n        if ((len & 3) !== 0) this._startOffset++;\n        return res;\n      },\n      dataWithLength: () => {\n        let len = this._i32View[this._startOffset++];\n        let ret = new Uint8Array(len);\n        ret.set(this._u8View.subarray(this._startOffset * 4, this._startOffset * 4 + len));\n        this._startOffset += ret.byteLength >> 2;\n        if ((ret.byteLength & 3) !== 0) this._startOffset++;\n        return ret.buffer;\n      },\n      matrix4x4: () => {\n        let len = this._i32View[this._startOffset++];\n        let ret = new Float32Array(len);\n        ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 16));\n        this._startOffset += len;\n        return ret;\n      },\n      identityCoefficients: () => {\n        let len = this._i32View[this._startOffset++];\n        let ret = new Float32Array(len);\n        ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 50));\n        this._startOffset += len;\n        return ret;\n      },\n      expressionCoefficients: () => {\n        let len = this._i32View[this._startOffset++];\n        let ret = new Float32Array(len);\n        ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 29));\n        this._startOffset += len;\n        return ret;\n      },\n      cameraModel: () => {\n        let len = this._i32View[this._startOffset++];\n        let ret = new Float32Array(len);\n        ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 6));\n        this._startOffset += len;\n        return ret;\n      },\n      barcodeFormat: () => this._i32View[this._startOffset++],\n      faceLandmarkName: () => this._i32View[this._startOffset++],\n      instantTrackerTransformOrientation: () => this._i32View[this._startOffset++],\n      logLevel: () => this._i32View[this._startOffset++]\n    };\n  }\n\n  setData(data) {\n    this._buffer = data;\n    this._i32View = new Int32Array(this._buffer);\n    this._f32View = new Float32Array(this._buffer);\n    this._f64View = new Float64Array(this._buffer);\n    this._u8View = new Uint8Array(this._buffer);\n    this._u16View = new Uint16Array(this._buffer);\n    this._u32View = new Uint32Array(this._buffer);\n    this._offset = 0;\n    this._length = 0;\n\n    if (data.byteLength >= 4) {\n      this._offset = 1;\n      this._length = this._i32View[0];\n    }\n\n    this._startOffset = -1;\n  }\n\n  hasMessage() {\n    return this._offset + 1 < this._length;\n  }\n\n  forMessages(cb) {\n    while (this.hasMessage()) {\n      let len = this._i32View[this._offset];\n      let messageId = this._i32View[this._offset + 1];\n      this._startOffset = this._offset + 2;\n      this._offset += len;\n      cb(messageId, this._processor);\n    }\n  }\n\n}\n\nexports.MessageDeserializer = MessageDeserializer;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-cv/lib/deserializer.js"],"names":["Object","defineProperty","exports","value","MessageDeserializer","constructor","_buffer","ArrayBuffer","_i32View","Int32Array","_f32View","Float32Array","_f64View","Float64Array","_u8View","Uint8Array","_u16View","Uint16Array","_u32View","Uint32Array","_offset","_length","_startOffset","_processor","int","bool","type","float","timestamp","ret","string","len","decoder","TextDecoder","res","decode","dataWithLength","set","subarray","byteLength","buffer","matrix4x4","identityCoefficients","expressionCoefficients","cameraModel","barcodeFormat","faceLandmarkName","instantTrackerTransformOrientation","logLevel","setData","data","hasMessage","forMessages","cb","messageId"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageDeserializer = void 0;\nclass MessageDeserializer {\n    constructor() {\n        this._buffer = new ArrayBuffer(0);\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        this._startOffset = -1;\n        this._processor = {\n            int: () => this._i32View[this._startOffset++],\n            bool: () => (this._i32View[this._startOffset++] === 1),\n            type: () => this._i32View[this._startOffset++],\n            float: () => this._f32View[this._startOffset++],\n            timestamp: () => {\n                if (this._startOffset % 2 === 1)\n                    this._startOffset++;\n                let ret = this._f64View[this._startOffset / 2];\n                this._startOffset += 2;\n                return ret;\n            },\n            string: () => {\n                let len = this._i32View[this._startOffset++];\n                let decoder = new TextDecoder();\n                let res = decoder.decode(new Uint8Array(this._buffer, this._startOffset * 4, len));\n                this._startOffset += (len >> 2);\n                if ((len & 3) !== 0)\n                    this._startOffset++;\n                return res;\n            },\n            dataWithLength: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Uint8Array(len);\n                ret.set(this._u8View.subarray(this._startOffset * 4, this._startOffset * 4 + len));\n                this._startOffset += (ret.byteLength >> 2);\n                if ((ret.byteLength & 3) !== 0)\n                    this._startOffset++;\n                return ret.buffer;\n            },\n            matrix4x4: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 16));\n                this._startOffset += len;\n                return ret;\n            },\n            identityCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 50));\n                this._startOffset += len;\n                return ret;\n            },\n            expressionCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 29));\n                this._startOffset += len;\n                return ret;\n            },\n            cameraModel: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 6));\n                this._startOffset += len;\n                return ret;\n            },\n            barcodeFormat: () => this._i32View[this._startOffset++],\n            faceLandmarkName: () => this._i32View[this._startOffset++],\n            instantTrackerTransformOrientation: () => this._i32View[this._startOffset++],\n            logLevel: () => this._i32View[this._startOffset++],\n        };\n    }\n    setData(data) {\n        this._buffer = data;\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        if (data.byteLength >= 4) {\n            this._offset = 1;\n            this._length = this._i32View[0];\n        }\n        this._startOffset = -1;\n    }\n    hasMessage() {\n        return this._offset + 1 < this._length;\n    }\n    forMessages(cb) {\n        while (this.hasMessage()) {\n            let len = this._i32View[this._offset];\n            let messageId = this._i32View[this._offset + 1];\n            this._startOffset = this._offset + 2;\n            this._offset += len;\n            cb(messageId, this._processor);\n        }\n    }\n}\nexports.MessageDeserializer = MessageDeserializer;\n"]},"metadata":{},"sourceType":"script"}