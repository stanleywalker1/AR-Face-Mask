{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FaceDraw = void 0;\n\nconst shader_1 = require(\"./shader\");\n\nclass FaceDraw {\n  constructor(_gl) {\n    this._gl = _gl;\n  }\n\n  dispose() {\n    if (this._vbo) this._gl.deleteBuffer(this._vbo);\n    if (this._normalbo) this._gl.deleteBuffer(this._normalbo);\n    if (this._ibo) this._gl.deleteBuffer(this._ibo);\n    if (this._shader) this._gl.deleteProgram(this._shader.prog);\n    this._vbo = undefined;\n    this._normalbo = undefined;\n    this._ibo = undefined;\n    this._shader = undefined;\n  }\n\n  _generateIBO(indices, gl) {\n    if (this._ibo && this._lastIndices === indices) return this._ibo;\n    this._lastIndices = indices;\n    if (!this._ibo) this._ibo = gl.createBuffer();\n    if (!this._ibo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._ibo);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return this._ibo;\n  }\n\n  _generateVBO(face, gl) {\n    if (!this._vbo) this._vbo = gl.createBuffer();\n    if (!this._vbo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return this._vbo;\n  }\n\n  _generateNormalBO(face, gl) {\n    if (!this._normalbo) this._normalbo = gl.createBuffer();\n    if (!this._normalbo) throw new Error(\"Unable to create buffer object\");\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._normalbo);\n    gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return this._normalbo;\n  }\n\n  drawFace(matrix, o) {\n    let gl = this._gl;\n\n    let shader = this._getShader(gl);\n\n    let v = this._generateVBO(o.getVertices(), gl);\n\n    let n = this._generateNormalBO(o.getNormals(), gl);\n\n    let i = this._generateIBO(o.getIndices(), gl);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.useProgram(shader.prog);\n    gl.uniformMatrix4fv(shader.unif_matrix, false, matrix);\n    gl.bindBuffer(gl.ARRAY_BUFFER, v);\n    gl.vertexAttribPointer(shader.attr_position, 3, gl.FLOAT, false, 3 * 4, 0);\n    gl.enableVertexAttribArray(shader.attr_position);\n    gl.bindBuffer(gl.ARRAY_BUFFER, n);\n    gl.vertexAttribPointer(shader.attr_normal, 3, gl.FLOAT, false, 3 * 4, 0);\n    gl.enableVertexAttribArray(shader.attr_normal);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, i);\n    gl.drawElements(gl.TRIANGLES, o.getIndices().length, gl.UNSIGNED_SHORT, 0);\n    gl.disableVertexAttribArray(shader.attr_position);\n    gl.disableVertexAttribArray(shader.attr_normal);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  _getShader(gl) {\n    if (this._shader) return this._shader;\n    let prog = gl.createProgram();\n    if (!prog) throw new Error(\"Unable to create program\");\n    let vertexShader = shader_1.compileShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n    let fragmentShader = shader_1.compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSrc);\n    gl.attachShader(prog, vertexShader);\n    gl.attachShader(prog, fragmentShader);\n    shader_1.linkProgram(gl, prog);\n    let unif_matrix = gl.getUniformLocation(prog, \"matrix\");\n    if (!unif_matrix) throw new Error(\"Unable to get uniform location mattrix\");\n    this._shader = {\n      prog,\n      unif_matrix,\n      attr_position: gl.getAttribLocation(prog, \"position\"),\n      attr_normal: gl.getAttribLocation(prog, \"normal\")\n    };\n    return this._shader;\n  }\n\n}\n\nexports.FaceDraw = FaceDraw;\nlet vertexShaderSrc = `\n#ifndef GL_ES\n#define highp\n#define mediump\n#define lowp\n#endif\n\nuniform mat4 matrix;\nattribute vec4 position;\nattribute vec3 normal;\nvarying highp vec3 vnormal;\n\nvoid main()\n{\n    gl_Position = matrix * position;\n    vnormal = normal;\n}`;\nlet fragmentShaderSrc = `\n#define highp mediump\n#ifdef GL_ES\n    // define default precision for float, vec, mat.\n    precision highp float;\n#else\n#define highp\n#define mediump\n#define lowp\n#endif\n\nvarying vec4 skinTexVarying;\nvarying highp vec3 vnormal;\nuniform lowp sampler2D skinSampler;\n\nvoid main()\n{\n    vec3 normal2 = 0.5 * vnormal + 0.5;\n    gl_FragColor = vec4(normal2.x , normal2.y, normal2.z, 1.0);\n}`;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/face-mask-demo/AR-Face-Mask/node_modules/@zappar/zappar-cv/lib/drawface.js"],"names":["Object","defineProperty","exports","value","FaceDraw","shader_1","require","constructor","_gl","dispose","_vbo","deleteBuffer","_normalbo","_ibo","_shader","deleteProgram","prog","undefined","_generateIBO","indices","gl","_lastIndices","createBuffer","Error","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","_generateVBO","face","ARRAY_BUFFER","STREAM_DRAW","_generateNormalBO","drawFace","matrix","o","shader","_getShader","v","getVertices","n","getNormals","i","getIndices","enable","DEPTH_TEST","CULL_FACE","useProgram","uniformMatrix4fv","unif_matrix","vertexAttribPointer","attr_position","FLOAT","enableVertexAttribArray","attr_normal","drawElements","TRIANGLES","length","UNSIGNED_SHORT","disableVertexAttribArray","createProgram","vertexShader","compileShader","VERTEX_SHADER","vertexShaderSrc","fragmentShader","FRAGMENT_SHADER","fragmentShaderSrc","attachShader","linkProgram","getUniformLocation","getAttribLocation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaceDraw = void 0;\nconst shader_1 = require(\"./shader\");\nclass FaceDraw {\n    constructor(_gl) {\n        this._gl = _gl;\n    }\n    dispose() {\n        if (this._vbo)\n            this._gl.deleteBuffer(this._vbo);\n        if (this._normalbo)\n            this._gl.deleteBuffer(this._normalbo);\n        if (this._ibo)\n            this._gl.deleteBuffer(this._ibo);\n        if (this._shader)\n            this._gl.deleteProgram(this._shader.prog);\n        this._vbo = undefined;\n        this._normalbo = undefined;\n        this._ibo = undefined;\n        this._shader = undefined;\n    }\n    _generateIBO(indices, gl) {\n        if (this._ibo && this._lastIndices === indices)\n            return this._ibo;\n        this._lastIndices = indices;\n        if (!this._ibo)\n            this._ibo = gl.createBuffer();\n        if (!this._ibo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return this._ibo;\n    }\n    _generateVBO(face, gl) {\n        if (!this._vbo)\n            this._vbo = gl.createBuffer();\n        if (!this._vbo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return this._vbo;\n    }\n    _generateNormalBO(face, gl) {\n        if (!this._normalbo)\n            this._normalbo = gl.createBuffer();\n        if (!this._normalbo)\n            throw new Error(\"Unable to create buffer object\");\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._normalbo);\n        gl.bufferData(gl.ARRAY_BUFFER, face, gl.STREAM_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return this._normalbo;\n    }\n    drawFace(matrix, o) {\n        let gl = this._gl;\n        let shader = this._getShader(gl);\n        let v = this._generateVBO(o.getVertices(), gl);\n        let n = this._generateNormalBO(o.getNormals(), gl);\n        let i = this._generateIBO(o.getIndices(), gl);\n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.CULL_FACE);\n        gl.useProgram(shader.prog);\n        gl.uniformMatrix4fv(shader.unif_matrix, false, matrix);\n        gl.bindBuffer(gl.ARRAY_BUFFER, v);\n        gl.vertexAttribPointer(shader.attr_position, 3, gl.FLOAT, false, 3 * 4, 0);\n        gl.enableVertexAttribArray(shader.attr_position);\n        gl.bindBuffer(gl.ARRAY_BUFFER, n);\n        gl.vertexAttribPointer(shader.attr_normal, 3, gl.FLOAT, false, 3 * 4, 0);\n        gl.enableVertexAttribArray(shader.attr_normal);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, i);\n        gl.drawElements(gl.TRIANGLES, o.getIndices().length, gl.UNSIGNED_SHORT, 0);\n        gl.disableVertexAttribArray(shader.attr_position);\n        gl.disableVertexAttribArray(shader.attr_normal);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    _getShader(gl) {\n        if (this._shader)\n            return this._shader;\n        let prog = gl.createProgram();\n        if (!prog)\n            throw new Error(\"Unable to create program\");\n        let vertexShader = shader_1.compileShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n        let fragmentShader = shader_1.compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSrc);\n        gl.attachShader(prog, vertexShader);\n        gl.attachShader(prog, fragmentShader);\n        shader_1.linkProgram(gl, prog);\n        let unif_matrix = gl.getUniformLocation(prog, \"matrix\");\n        if (!unif_matrix)\n            throw new Error(\"Unable to get uniform location mattrix\");\n        this._shader = {\n            prog,\n            unif_matrix,\n            attr_position: gl.getAttribLocation(prog, \"position\"),\n            attr_normal: gl.getAttribLocation(prog, \"normal\")\n        };\n        return this._shader;\n    }\n}\nexports.FaceDraw = FaceDraw;\nlet vertexShaderSrc = `\n#ifndef GL_ES\n#define highp\n#define mediump\n#define lowp\n#endif\n\nuniform mat4 matrix;\nattribute vec4 position;\nattribute vec3 normal;\nvarying highp vec3 vnormal;\n\nvoid main()\n{\n    gl_Position = matrix * position;\n    vnormal = normal;\n}`;\nlet fragmentShaderSrc = `\n#define highp mediump\n#ifdef GL_ES\n    // define default precision for float, vec, mat.\n    precision highp float;\n#else\n#define highp\n#define mediump\n#define lowp\n#endif\n\nvarying vec4 skinTexVarying;\nvarying highp vec3 vnormal;\nuniform lowp sampler2D skinSampler;\n\nvoid main()\n{\n    vec3 normal2 = 0.5 * vnormal + 0.5;\n    gl_FragColor = vec4(normal2.x , normal2.y, normal2.z, 1.0);\n}`;\n"]},"metadata":{},"sourceType":"script"}