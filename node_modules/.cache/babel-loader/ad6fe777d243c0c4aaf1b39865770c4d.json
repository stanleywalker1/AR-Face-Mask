{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ZapparThree = __importStar(require(\"@zappar/zappar-threejs\"));\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst react_merge_refs_1 = __importDefault(require(\"react-merge-refs\"));\n\nconst fiber_1 = require(\"@react-three/fiber\");\n/**\n * A THREE.Mesh that fits the user's head and fills the depth buffer,\n * ensuring that the camera image of the head shows instead of any 3D elements behind it in the scene.\n *\n * Works using a full-head ZapparThree.FaceMesh with the mouth, eyes and neck filled in.\n * Its renderOrder is set to Number.MIN_SAFE_INTEGER to ensure it's rendered before any other objects in the scene,\n * and its material has the colorWrite property set to false so it fills the depth buffer but not the color buffer.\n * @see https://docs.zap.works/universal-ar/web-libraries/react-threejs/face-tracking/\n */\n\n\nconst zapparHeadMaskMesh = (0, react_1.forwardRef)((props, ref) => {\n  const {\n    children,\n    trackerGroup\n  } = props;\n  const headMaskMeshRef = react_1.default.useRef();\n  const [faceMesh] = (0, react_1.useState)(new ZapparThree.HeadMaskMeshLoader().load());\n  (0, fiber_1.useFrame)(() => {\n    if (headMaskMeshRef.current && trackerGroup && trackerGroup.current) {\n      headMaskMeshRef.current.updateFromFaceAnchorGroup(trackerGroup.current);\n    }\n  });\n  if (!faceMesh) return null;\n  return react_1.default.createElement(\"primitive\", Object.assign({\n    object: faceMesh,\n    ref: (0, react_merge_refs_1.default)([headMaskMeshRef, ref])\n  }, props), children);\n});\nexports.default = zapparHeadMaskMesh;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/react-three-example-face-tracking-helmet-1/node_modules/@zappar/zappar-react-three-fiber/lib/Components/HeadMaskMesh.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","ZapparThree","require","react_1","react_merge_refs_1","fiber_1","zapparHeadMaskMesh","forwardRef","props","ref","children","trackerGroup","headMaskMeshRef","default","useRef","faceMesh","useState","HeadMaskMeshLoader","load","useFrame","current","updateFromFaceAnchorGroup","createElement","assign","object"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ZapparThree = __importStar(require(\"@zappar/zappar-threejs\"));\nconst react_1 = __importStar(require(\"react\"));\nconst react_merge_refs_1 = __importDefault(require(\"react-merge-refs\"));\nconst fiber_1 = require(\"@react-three/fiber\");\n/**\n * A THREE.Mesh that fits the user's head and fills the depth buffer,\n * ensuring that the camera image of the head shows instead of any 3D elements behind it in the scene.\n *\n * Works using a full-head ZapparThree.FaceMesh with the mouth, eyes and neck filled in.\n * Its renderOrder is set to Number.MIN_SAFE_INTEGER to ensure it's rendered before any other objects in the scene,\n * and its material has the colorWrite property set to false so it fills the depth buffer but not the color buffer.\n * @see https://docs.zap.works/universal-ar/web-libraries/react-threejs/face-tracking/\n */\nconst zapparHeadMaskMesh = (0, react_1.forwardRef)((props, ref) => {\n    const { children, trackerGroup } = props;\n    const headMaskMeshRef = react_1.default.useRef();\n    const [faceMesh] = (0, react_1.useState)(new ZapparThree.HeadMaskMeshLoader().load());\n    (0, fiber_1.useFrame)(() => {\n        if (headMaskMeshRef.current && trackerGroup && trackerGroup.current) {\n            headMaskMeshRef.current.updateFromFaceAnchorGroup(trackerGroup.current);\n        }\n    });\n    if (!faceMesh)\n        return null;\n    return (react_1.default.createElement(\"primitive\", Object.assign({ object: faceMesh, ref: (0, react_merge_refs_1.default)([headMaskMeshRef, ref]) }, props), children));\n});\nexports.default = zapparHeadMaskMesh;\n"]},"metadata":{},"sourceType":"script"}