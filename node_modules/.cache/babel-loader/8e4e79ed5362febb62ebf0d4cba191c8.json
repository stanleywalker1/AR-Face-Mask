{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BarcodeFinder = void 0;\n\nconst event_1 = require(\"./event\");\n\nconst zappar_cv_1 = require(\"@zappar/zappar-cv\");\n\nconst zappar_1 = require(\"./zappar\");\n/**\n * Detects barcodes in the images from the camera.\n */\n\n\nclass BarcodeFinder {\n  /**\n   * Constructs a new BarcodeFinder.\n   * @param _pipeline - The pipeline that this BarcodeFinder will operate within.\n  */\n  constructor(_pipeline) {\n    this._pipeline = _pipeline;\n    /**\n    * Emitted when a barcode becomes visible in a camera frame.\n    */\n\n    this.onDetection = new event_1.Event1();\n    this._lastDetected = [];\n    this._found = [];\n    this._formats = [];\n\n    this._frameUpdate = () => {\n      this._found = [];\n\n      const num = this._z.barcode_finder_found_number(this._impl);\n\n      for (let i = 0; i < num; i++) {\n        this._found.push({\n          text: this._z.barcode_finder_found_text(this._impl, i),\n          format: this._z.barcode_finder_found_format(this._impl, i)\n        });\n      }\n\n      if (this._found.length === 0) return;\n\n      outerloop: for (const entry of this._found) {\n        for (const previous of this._lastDetected) {\n          if (previous.text === entry.text) continue outerloop;\n        }\n\n        this.onDetection.emit(entry);\n      }\n\n      this._lastDetected = this._found;\n    };\n\n    this._pipeline._onFrameUpdateInternal.bind(this._frameUpdate);\n\n    this._z = zappar_1.z();\n    this._impl = this._z.barcode_finder_create(this._pipeline._getImpl());\n\n    this._formats.push.apply(this._formats, [zappar_cv_1.barcode_format_t.AZTEC, zappar_cv_1.barcode_format_t.CODABAR, zappar_cv_1.barcode_format_t.CODE_39, zappar_cv_1.barcode_format_t.CODE_93, zappar_cv_1.barcode_format_t.CODE_128, zappar_cv_1.barcode_format_t.DATA_MATRIX, zappar_cv_1.barcode_format_t.EAN_8, zappar_cv_1.barcode_format_t.EAN_13, zappar_cv_1.barcode_format_t.ITF, zappar_cv_1.barcode_format_t.MAXICODE, zappar_cv_1.barcode_format_t.PDF_417, zappar_cv_1.barcode_format_t.QR_CODE, zappar_cv_1.barcode_format_t.RSS_14, zappar_cv_1.barcode_format_t.RSS_EXPANDED, zappar_cv_1.barcode_format_t.UPC_A, zappar_cv_1.barcode_format_t.UPC_E, zappar_cv_1.barcode_format_t.UPC_EAN_EXTENSION]);\n  }\n  /**\n   * Destroys the barcode finder.\n   */\n\n\n  destroy() {\n    this._pipeline._onFrameUpdateInternal.unbind(this._frameUpdate);\n\n    this._found = [];\n    this._lastDetected = [];\n\n    this._z.barcode_finder_destroy(this._impl);\n  }\n  /**\n    * Returns an array of discovered barcodes\n    */\n\n\n  get found() {\n    return this._found;\n  }\n  /**\n   * Gets/sets the enabled state of the barcode finder.\n   * Disable when not in use to save computational resources during frame processing.\n  */\n\n\n  get enabled() {\n    return this._z.barcode_finder_enabled(this._impl);\n  }\n\n  set enabled(e) {\n    this._z.barcode_finder_enabled_set(this._impl, e);\n  }\n  /**\n    * Gets/sets the barcode formats to scan for.\n    */\n\n\n  get formats() {\n    return this._formats;\n  }\n\n  set formats(f) {\n    this._formats = f.slice();\n    let underlying = 0;\n\n    for (const format of this._formats) {\n      underlying |= format;\n    }\n\n    this._z.barcode_finder_formats_set(this._impl, underlying);\n  }\n\n}\n\nexports.BarcodeFinder = BarcodeFinder;","map":{"version":3,"sources":["/Users/StanleyWalker/Desktop/face-mask-demo/AR-Face-Mask/node_modules/@zappar/zappar/lib/barcodefinder.js"],"names":["Object","defineProperty","exports","value","BarcodeFinder","event_1","require","zappar_cv_1","zappar_1","constructor","_pipeline","onDetection","Event1","_lastDetected","_found","_formats","_frameUpdate","num","_z","barcode_finder_found_number","_impl","i","push","text","barcode_finder_found_text","format","barcode_finder_found_format","length","outerloop","entry","previous","emit","_onFrameUpdateInternal","bind","z","barcode_finder_create","_getImpl","apply","barcode_format_t","AZTEC","CODABAR","CODE_39","CODE_93","CODE_128","DATA_MATRIX","EAN_8","EAN_13","ITF","MAXICODE","PDF_417","QR_CODE","RSS_14","RSS_EXPANDED","UPC_A","UPC_E","UPC_EAN_EXTENSION","destroy","unbind","barcode_finder_destroy","found","enabled","barcode_finder_enabled","e","barcode_finder_enabled_set","formats","f","slice","underlying","barcode_finder_formats_set"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BarcodeFinder = void 0;\nconst event_1 = require(\"./event\");\nconst zappar_cv_1 = require(\"@zappar/zappar-cv\");\nconst zappar_1 = require(\"./zappar\");\n/**\n * Detects barcodes in the images from the camera.\n */\nclass BarcodeFinder {\n    /**\n     * Constructs a new BarcodeFinder.\n     * @param _pipeline - The pipeline that this BarcodeFinder will operate within.\n    */\n    constructor(_pipeline) {\n        this._pipeline = _pipeline;\n        /**\n        * Emitted when a barcode becomes visible in a camera frame.\n        */\n        this.onDetection = new event_1.Event1();\n        this._lastDetected = [];\n        this._found = [];\n        this._formats = [];\n        this._frameUpdate = () => {\n            this._found = [];\n            const num = this._z.barcode_finder_found_number(this._impl);\n            for (let i = 0; i < num; i++) {\n                this._found.push({\n                    text: this._z.barcode_finder_found_text(this._impl, i),\n                    format: this._z.barcode_finder_found_format(this._impl, i)\n                });\n            }\n            if (this._found.length === 0)\n                return;\n            outerloop: for (const entry of this._found) {\n                for (const previous of this._lastDetected) {\n                    if (previous.text === entry.text)\n                        continue outerloop;\n                }\n                this.onDetection.emit(entry);\n            }\n            this._lastDetected = this._found;\n        };\n        this._pipeline._onFrameUpdateInternal.bind(this._frameUpdate);\n        this._z = zappar_1.z();\n        this._impl = this._z.barcode_finder_create(this._pipeline._getImpl());\n        this._formats.push.apply(this._formats, [\n            zappar_cv_1.barcode_format_t.AZTEC,\n            zappar_cv_1.barcode_format_t.CODABAR,\n            zappar_cv_1.barcode_format_t.CODE_39,\n            zappar_cv_1.barcode_format_t.CODE_93,\n            zappar_cv_1.barcode_format_t.CODE_128,\n            zappar_cv_1.barcode_format_t.DATA_MATRIX,\n            zappar_cv_1.barcode_format_t.EAN_8,\n            zappar_cv_1.barcode_format_t.EAN_13,\n            zappar_cv_1.barcode_format_t.ITF,\n            zappar_cv_1.barcode_format_t.MAXICODE,\n            zappar_cv_1.barcode_format_t.PDF_417,\n            zappar_cv_1.barcode_format_t.QR_CODE,\n            zappar_cv_1.barcode_format_t.RSS_14,\n            zappar_cv_1.barcode_format_t.RSS_EXPANDED,\n            zappar_cv_1.barcode_format_t.UPC_A,\n            zappar_cv_1.barcode_format_t.UPC_E,\n            zappar_cv_1.barcode_format_t.UPC_EAN_EXTENSION\n        ]);\n    }\n    /**\n     * Destroys the barcode finder.\n     */\n    destroy() {\n        this._pipeline._onFrameUpdateInternal.unbind(this._frameUpdate);\n        this._found = [];\n        this._lastDetected = [];\n        this._z.barcode_finder_destroy(this._impl);\n    }\n    /**\n      * Returns an array of discovered barcodes\n      */\n    get found() {\n        return this._found;\n    }\n    /**\n     * Gets/sets the enabled state of the barcode finder.\n     * Disable when not in use to save computational resources during frame processing.\n    */\n    get enabled() {\n        return this._z.barcode_finder_enabled(this._impl);\n    }\n    set enabled(e) {\n        this._z.barcode_finder_enabled_set(this._impl, e);\n    }\n    /**\n      * Gets/sets the barcode formats to scan for.\n      */\n    get formats() {\n        return this._formats;\n    }\n    set formats(f) {\n        this._formats = f.slice();\n        let underlying = 0;\n        for (const format of this._formats) {\n            underlying |= format;\n        }\n        this._z.barcode_finder_formats_set(this._impl, underlying);\n    }\n}\nexports.BarcodeFinder = BarcodeFinder;\n"]},"metadata":{},"sourceType":"script"}