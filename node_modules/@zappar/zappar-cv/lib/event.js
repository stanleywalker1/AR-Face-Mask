"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event5 = exports.Event3 = exports.Event2 = exports.Event1 = exports.Event = void 0;
class Event {
    constructor() {
        this._funcs = [];
    }
    bind(f) {
        this._funcs.push(f);
    }
    unbind(f) {
        let indx = this._funcs.indexOf(f);
        if (indx > -1) {
            this._funcs.splice(indx, 1);
        }
    }
    emit() {
        for (var i = 0, total = this._funcs.length; i < total; i++) {
            this._funcs[i]();
        }
    }
}
exports.Event = Event;
class Event1 {
    constructor() {
        this._funcs = [];
    }
    bind(f) {
        this._funcs.push(f);
    }
    unbind(f) {
        let indx = this._funcs.indexOf(f);
        if (indx > -1) {
            this._funcs.splice(indx, 1);
        }
    }
    emit(a) {
        for (var i = 0, total = this._funcs.length; i < total; i++) {
            this._funcs[i](a);
        }
    }
}
exports.Event1 = Event1;
class Event2 {
    constructor() {
        this._funcs = [];
    }
    bind(f) {
        this._funcs.push(f);
    }
    unbind(f) {
        let indx = this._funcs.indexOf(f);
        if (indx > -1) {
            this._funcs.splice(indx, 1);
        }
    }
    emit(a, b) {
        for (var i = 0, total = this._funcs.length; i < total; i++) {
            this._funcs[i](a, b);
        }
    }
}
exports.Event2 = Event2;
class Event3 {
    constructor() {
        this._funcs = [];
    }
    bind(f) {
        this._funcs.push(f);
    }
    unbind(f) {
        let indx = this._funcs.indexOf(f);
        if (indx > -1) {
            this._funcs.splice(indx, 1);
        }
    }
    emit(a, b, c) {
        for (var i = 0, total = this._funcs.length; i < total; i++) {
            this._funcs[i](a, b, c);
        }
    }
}
exports.Event3 = Event3;
class Event5 {
    constructor() {
        this._funcs = [];
    }
    bind(f) {
        this._funcs.push(f);
    }
    unbind(f) {
        let indx = this._funcs.indexOf(f);
        if (indx > -1) {
            this._funcs.splice(indx, 1);
        }
    }
    emit(a, b, c, d, e) {
        for (var i = 0, total = this._funcs.length; i < total; i++) {
            this._funcs[i](a, b, c, d, e);
        }
    }
}
exports.Event5 = Event5;
