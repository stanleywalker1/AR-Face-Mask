"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.launchWorker = exports.messageManager = void 0;
const messages_1 = require("./messages");
const worker_server_1 = require("./worker-server");
const worker_server_2 = require("./worker-server");
exports.messageManager = new messages_1.MsgManager();
function launchWorker(wasm) {
    return __awaiter(this, void 0, void 0, function* () {
        exports.messageManager.onOutgoingMessage.bind(() => {
            let msgs = exports.messageManager.getOutgoingMessages();
            for (let msg of msgs)
                worker_server_2.messageManager.postIncomingMessage(msg.msg);
        });
        worker_server_2.messageManager.onOutgoingMessage.bind(() => {
            let msgs = worker_server_2.messageManager.getOutgoingMessages();
            for (let msg of msgs)
                exports.messageManager.postIncomingMessage(msg.msg);
        });
        worker_server_1.launchWorkerServer(wasm);
    });
}
exports.launchWorker = launchWorker;
